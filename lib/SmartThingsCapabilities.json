[
    {
        "id": "accelerationSensor",
        "version": 1,
        "status": "live",
        "name": "Acceleration Sensor",
        "attributes": {
            "acceleration": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ActivityState",
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "activityLightingMode",
        "version": 1,
        "status": "proposed",
        "name": "Activity Lighting Mode",
        "attributes": {
            "lightingMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "reading",
                                "writing",
                                "computer",
                                "night",
                                "sleepPreparation",
                                "day",
                                "cozy",
                                "soft"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setLightingMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setLightingMode": {
                "arguments": [
                    {
                        "name": "lightingMode",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "reading",
                                "writing",
                                "computer",
                                "night",
                                "sleepPreparation",
                                "day",
                                "cozy",
                                "soft"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "activitySensor",
        "version": 1,
        "status": "proposed",
        "name": "Activity Sensor",
        "attributes": {
            "activity": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ActivityType",
                            "type": "string",
                            "enum": [
                                "noActivity",
                                "falling",
                                "lying",
                                "sitting",
                                "standing",
                                "eating"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "actuator",
        "version": 1,
        "status": "deprecated",
        "name": "Actuator",
        "attributes": {},
        "commands": {}
    },
    {
        "id": "airConditionerFanMode",
        "version": 1,
        "status": "proposed",
        "name": "Air Conditioner Fan Mode",
        "attributes": {
            "fanMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "supportedAcFanModes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setFanMode": {
                "arguments": [
                    {
                        "name": "fanMode",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "airConditionerMode",
        "version": 1,
        "status": "proposed",
        "name": "Air Conditioner Mode",
        "attributes": {
            "supportedAcModes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "airConditionerMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setAirConditionerMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setAirConditionerMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "airFlowDirection",
        "version": 1,
        "status": "dead",
        "name": "Air Flow Direction",
        "attributes": {
            "airFlowDirection": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AirFlowDirection",
                            "type": "string",
                            "enum": [
                                "fixed",
                                "vertical",
                                "horizontal",
                                "all"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setAirFlowDirection": {
                "arguments": [
                    {
                        "name": "airFlowDirection",
                        "optional": false,
                        "schema": {
                            "title": "AirFlowDirection",
                            "type": "string",
                            "enum": [
                                "fixed",
                                "vertical",
                                "horizontal",
                                "all"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "airPurifierFanMode",
        "version": 1,
        "status": "proposed",
        "name": "Air Purifier Fan Mode",
        "attributes": {
            "supportedAirPurifierFanModes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "auto",
                                    "sleep",
                                    "low",
                                    "medium",
                                    "high",
                                    "quiet",
                                    "windFree"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "airPurifierFanMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AirPurifierFanMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "sleep",
                                "low",
                                "medium",
                                "high",
                                "quiet",
                                "windFree"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setAirPurifierFanMode": {
                "arguments": [
                    {
                        "name": "airPurifierFanMode",
                        "optional": false,
                        "schema": {
                            "title": "AirPurifierFanMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "sleep",
                                "low",
                                "medium",
                                "high",
                                "quiet",
                                "windFree"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "airQualitySensor",
        "version": 1,
        "status": "live",
        "name": "Air Quality Sensor",
        "attributes": {
            "airQuality": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "CAQI"
                            ],
                            "default": "CAQI"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "alarm",
        "version": 1,
        "status": "live",
        "name": "Alarm",
        "attributes": {
            "alarm": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AlertState",
                            "type": "string",
                            "enum": [
                                "both",
                                "off",
                                "siren",
                                "strobe"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "both",
                        "value": "both"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    },
                    {
                        "command": "siren",
                        "value": "siren"
                    },
                    {
                        "command": "strobe",
                        "value": "strobe"
                    }
                ]
            }
        },
        "commands": {
            "siren": {
                "arguments": []
            },
            "strobe": {
                "arguments": []
            },
            "off": {
                "arguments": []
            },
            "both": {
                "arguments": []
            }
        }
    },
    {
        "id": "alarmSystem",
        "version": 1,
        "status": "dead",
        "name": "Alarm System",
        "attributes": {
            "alarmSystemStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AlarmSystemState",
                            "type": "string",
                            "enum": [
                                "away",
                                "off",
                                "stay"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "sendEvent(alarmSystemStatus,off)",
                        "value": "off"
                    },
                    {
                        "command": "sendEvent(alarmSystemStatus,stay)",
                        "value": "stay"
                    },
                    {
                        "command": "sendEvent(alarmSystemStatus,away)",
                        "value": "away"
                    }
                ]
            }
        },
        "commands": {
            "sendEvent(alarmSystemStatus,off)": {
                "arguments": []
            },
            "sendEvent(alarmSystemStatus,away)": {
                "arguments": []
            },
            "sendEvent(alarmSystemStatus,stay)": {
                "arguments": []
            }
        }
    },
    {
        "id": "alarmSystemArmOnly",
        "version": 1,
        "status": "dead",
        "name": "Alarm System Arm Only",
        "attributes": {
            "alarmSystemStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AlarmSystemState",
                            "type": "string",
                            "enum": [
                                "away",
                                "off",
                                "stay"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "sendEvent(alarmSystemStatus,stay)",
                        "value": "stay"
                    },
                    {
                        "command": "sendEvent(alarmSystemStatus,away)",
                        "value": "away"
                    }
                ]
            }
        },
        "commands": {
            "sendEvent(alarmSystemStatus,away)": {
                "arguments": []
            },
            "sendEvent(alarmSystemStatus,stay)": {
                "arguments": []
            }
        }
    },
    {
        "id": "astronomicalData",
        "version": 1,
        "status": "dead",
        "name": "Astronomical Data",
        "attributes": {
            "sunrise": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "true"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "sendEvent(sunrise)",
                "enumCommands": []
            },
            "sunsetTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "sendEvent(sunsetTime)",
                "enumCommands": []
            },
            "sunset": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "true"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "sendEvent(sunset)",
                "enumCommands": []
            },
            "sunriseTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "sendEvent(sunriseTime)",
                "enumCommands": []
            }
        },
        "commands": {
            "sendEvent(sunriseTime)": {
                "arguments": []
            },
            "sendEvent(sunrise)": {
                "arguments": []
            },
            "sendEvent(sunset)": {
                "arguments": []
            },
            "sendEvent(sunsetTime)": {
                "arguments": []
            }
        }
    },
    {
        "id": "atmosphericPressureMeasurement",
        "version": 1,
        "status": "proposed",
        "name": "Atmospheric Pressure Measurement",
        "attributes": {
            "atmosphericPressure": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 110
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "kPa"
                            ],
                            "default": "kPa"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "audioCapture",
        "version": 1,
        "status": "proposed",
        "name": "Audio Capture",
        "attributes": {
            "stream": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "clip": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "capture": {
                "arguments": [
                    {
                        "name": "startTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    {
                        "name": "captureTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    {
                        "name": "endTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    {
                        "name": "correlationId",
                        "optional": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "reason",
                        "optional": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "audioMute",
        "version": 1,
        "status": "live",
        "name": "Audio Mute",
        "attributes": {
            "mute": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MuteState",
                            "type": "string",
                            "enum": [
                                "muted",
                                "unmuted"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setMute",
                "enumCommands": [
                    {
                        "command": "mute",
                        "value": "muted"
                    },
                    {
                        "command": "unmute",
                        "value": "unmuted"
                    }
                ]
            }
        },
        "commands": {
            "setMute": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "title": "MuteState",
                            "type": "string",
                            "enum": [
                                "muted",
                                "unmuted"
                            ]
                        }
                    }
                ]
            },
            "mute": {
                "arguments": []
            },
            "unmute": {
                "arguments": []
            }
        }
    },
    {
        "id": "audioNotification",
        "version": 1,
        "status": "live",
        "name": "Audio Notification",
        "attributes": {},
        "commands": {
            "playTrackAndResume": {
                "arguments": [
                    {
                        "name": "uri",
                        "optional": false,
                        "schema": {
                            "title": "URI",
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    {
                        "name": "level",
                        "optional": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    }
                ]
            },
            "playTrackAndRestore": {
                "arguments": [
                    {
                        "name": "uri",
                        "optional": false,
                        "schema": {
                            "title": "URI",
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    {
                        "name": "level",
                        "optional": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    }
                ]
            },
            "playTrack": {
                "arguments": [
                    {
                        "name": "uri",
                        "optional": false,
                        "schema": {
                            "title": "URI",
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    {
                        "name": "level",
                        "optional": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "audioStream",
        "version": 1,
        "status": "live",
        "name": "Audio Stream",
        "attributes": {
            "uri": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "URI",
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "startAudio": {
                "arguments": []
            },
            "stopAudio": {
                "arguments": []
            }
        }
    },
    {
        "id": "audioTrackAddressing",
        "version": 1,
        "status": "proposed",
        "name": "Audio Track Addressing",
        "attributes": {},
        "commands": {
            "setAudioTrack": {
                "arguments": [
                    {
                        "name": "trackToSet",
                        "optional": false,
                        "schema": {
                            "title": "AudioTrackAddress",
                            "type": "object"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "audioTrackData",
        "version": 1,
        "status": "proposed",
        "name": "Audio Track Data",
        "attributes": {
            "totalTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "audioTrackData": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AudioTrackData",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "title": {
                                    "title": "String",
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "artist": {
                                    "title": "String",
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "album": {
                                    "title": "String",
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "albumArtUrl": {
                                    "title": "String",
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "mediaSource": {
                                    "title": "String",
                                    "type": "string",
                                    "maxLength": 255
                                }
                            },
                            "required": [
                                "title"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "elapsedTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "audioVolume",
        "version": 1,
        "status": "live",
        "name": "Audio Volume",
        "attributes": {
            "volume": {
                "schema": {
                    "title": "IntegerPercent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setVolume",
                "enumCommands": []
            }
        },
        "commands": {
            "volumeDown": {
                "arguments": []
            },
            "volumeUp": {
                "arguments": []
            },
            "setVolume": {
                "arguments": [
                    {
                        "name": "volume",
                        "optional": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "battery",
        "version": 1,
        "status": "live",
        "name": "Battery",
        "attributes": {
            "battery": {
                "schema": {
                    "title": "IntegerPercent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "beacon",
        "version": 1,
        "status": "deprecated",
        "name": "Beacon",
        "attributes": {
            "presence": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PresenceState",
                            "type": "string",
                            "enum": [
                                "present",
                                "not present"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "bodyMassIndexMeasurement",
        "version": 1,
        "status": "proposed",
        "name": "Body Mass Index Measurement",
        "attributes": {
            "bmiMeasurement": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "kg/m^2"
                            ],
                            "default": "kg/m^2"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "bodyWeightMeasurement",
        "version": 1,
        "status": "proposed",
        "name": "Body Weight Measurement",
        "attributes": {
            "bodyWeightMeasurement": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "kg",
                                "lbs",
                                "斤"
                            ],
                            "default": "kg"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "bridge",
        "version": 1,
        "status": "deprecated",
        "name": "Bridge",
        "attributes": {},
        "commands": {}
    },
    {
        "id": "bufferedVideoCapture",
        "version": 1,
        "status": "deprecated",
        "name": "Buffered Video Capture",
        "attributes": {
            "clip": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "capture": {
                "arguments": [
                    {
                        "name": "startTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    {
                        "name": "captureTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    {
                        "name": "endTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "bulb",
        "version": 1,
        "status": "dead",
        "name": "Bulb",
        "attributes": {
            "switch": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "SwitchState",
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "off",
                        "value": "off"
                    },
                    {
                        "command": "on",
                        "value": "on"
                    }
                ]
            }
        },
        "commands": {
            "off": {
                "arguments": []
            },
            "on": {
                "arguments": []
            }
        }
    },
    {
        "id": "button",
        "version": 1,
        "status": "live",
        "name": "Button",
        "attributes": {
            "button": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ButtonState",
                            "type": "string",
                            "enum": [
                                "pushed",
                                "held",
                                "double",
                                "pushed_2x",
                                "pushed_3x",
                                "pushed_4x",
                                "pushed_5x",
                                "pushed_6x",
                                "down",
                                "down_2x",
                                "down_3x",
                                "down_4x",
                                "down_5x",
                                "down_6x",
                                "down_hold",
                                "up",
                                "up_2x",
                                "up_3x",
                                "up_4x",
                                "up_5x",
                                "up_6x",
                                "up_hold"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "numberOfButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "supportedButtonValues": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "ButtonState",
                                "type": "string",
                                "enum": [
                                    "pushed",
                                    "held",
                                    "double",
                                    "pushed_2x",
                                    "pushed_3x",
                                    "pushed_4x",
                                    "pushed_5x",
                                    "pushed_6x",
                                    "down",
                                    "down_2x",
                                    "down_3x",
                                    "down_4x",
                                    "down_5x",
                                    "down_6x",
                                    "down_hold",
                                    "up",
                                    "up_2x",
                                    "up_3x",
                                    "up_4x",
                                    "up_5x",
                                    "up_6x",
                                    "up_hold"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "bypassable",
        "version": 1,
        "status": "live",
        "name": "Bypassable",
        "attributes": {
            "bypassStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "BypassState",
                            "type": "string",
                            "enum": [
                                "ready",
                                "notReady",
                                "bypassed"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "cameraPreset",
        "version": 1,
        "status": "proposed",
        "name": "Camera Preset",
        "attributes": {
            "presets": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "Camera Preset",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "title": "JsonObject",
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "name",
                                    "id",
                                    "data"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "create": {
                "arguments": [
                    {
                        "name": "name",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "id",
                        "optional": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "data",
                        "optional": true,
                        "schema": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    }
                ]
            },
            "update": {
                "arguments": [
                    {
                        "name": "id",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "name",
                        "optional": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "data",
                        "optional": true,
                        "schema": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    }
                ]
            },
            "execute": {
                "arguments": [
                    {
                        "name": "id",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "delete": {
                "arguments": [
                    {
                        "name": "id",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "carbonDioxideHealthConcern",
        "version": 1,
        "status": "proposed",
        "name": "Carbon Dioxide Health Concern",
        "attributes": {
            "carbonDioxideHealthConcern": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AirQualityHealthConcern",
                            "type": "string",
                            "enum": [
                                "good",
                                "moderate",
                                "slightlyUnhealthy",
                                "unhealthy",
                                "veryUnhealthy",
                                "hazardous"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "carbonDioxideMeasurement",
        "version": 1,
        "status": "live",
        "name": "Carbon Dioxide Measurement",
        "attributes": {
            "carbonDioxide": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 1000000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "ppm"
                            ],
                            "default": "ppm"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "carbonMonoxideDetector",
        "version": 1,
        "status": "live",
        "name": "Carbon Monoxide Detector",
        "attributes": {
            "carbonMonoxide": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "CarbonMonoxideState",
                            "type": "string",
                            "enum": [
                                "clear",
                                "detected",
                                "tested"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "carbonMonoxideMeasurement",
        "version": 1,
        "status": "proposed",
        "name": "Carbon Monoxide Measurement",
        "attributes": {
            "carbonMonoxideLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1000000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "ppm"
                            ],
                            "default": "ppm"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "chime",
        "version": 1,
        "status": "proposed",
        "name": "Chime",
        "attributes": {
            "chime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "chime",
                                "off"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "chime",
                        "value": "chime"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    }
                ]
            }
        },
        "commands": {
            "off": {
                "arguments": []
            },
            "chime": {
                "arguments": []
            }
        }
    },
    {
        "id": "color",
        "version": 1,
        "status": "proposed",
        "name": "Color",
        "attributes": {
            "colorValue": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "hue": {
                                    "type": "number",
                                    "minimum": 0.0,
                                    "maximum": 360.0
                                },
                                "saturation": {
                                    "type": "number",
                                    "minimum": 0.0,
                                    "maximum": 100.0
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setColorValue",
                "enumCommands": []
            }
        },
        "commands": {
            "setColorValue": {
                "arguments": [
                    {
                        "name": "colorValue",
                        "optional": false,
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "hue": {
                                    "type": "number",
                                    "minimum": 0.0,
                                    "maximum": 360.0
                                },
                                "saturation": {
                                    "type": "number",
                                    "minimum": 0.0,
                                    "maximum": 100.0
                                }
                            },
                            "required": [
                                "hue",
                                "saturation"
                            ]
                        }
                    },
                    {
                        "name": "switchLevel",
                        "optional": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "colorControl",
        "version": 1,
        "status": "live",
        "name": "Color Control",
        "attributes": {
            "saturation": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveNumber",
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setSaturation",
                "enumCommands": []
            },
            "color": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setColor",
                "enumCommands": []
            },
            "hue": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveNumber",
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setHue",
                "enumCommands": []
            }
        },
        "commands": {
            "setColor": {
                "arguments": [
                    {
                        "name": "color",
                        "optional": false,
                        "schema": {
                            "title": "COLOR_MAP",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "hue": {
                                    "type": "number"
                                },
                                "saturation": {
                                    "type": "number"
                                },
                                "hex": {
                                    "type": "string",
                                    "maxLength": 7
                                },
                                "level": {
                                    "type": "integer"
                                },
                                "switch": {
                                    "type": "string",
                                    "maxLength": 3
                                }
                            }
                        }
                    }
                ]
            },
            "setHue": {
                "arguments": [
                    {
                        "name": "hue",
                        "optional": false,
                        "schema": {
                            "title": "PositiveNumber",
                            "type": "number",
                            "minimum": 0
                        }
                    }
                ]
            },
            "setSaturation": {
                "arguments": [
                    {
                        "name": "saturation",
                        "optional": false,
                        "schema": {
                            "title": "PositiveNumber",
                            "type": "number",
                            "minimum": 0
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "colorMode",
        "version": 1,
        "status": "proposed",
        "name": "Color Mode",
        "attributes": {
            "colorMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "color",
                                "colorTemperature",
                                "other"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "colorTemperature",
        "version": 1,
        "status": "live",
        "name": "Color Temperature",
        "attributes": {
            "colorTemperature": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 30000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "K"
                            ],
                            "default": "K"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setColorTemperature",
                "enumCommands": []
            }
        },
        "commands": {
            "setColorTemperature": {
                "arguments": [
                    {
                        "name": "temperature",
                        "optional": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 30000
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "configuration",
        "version": 1,
        "status": "live",
        "name": "Configuration",
        "attributes": {},
        "commands": {
            "configure": {
                "arguments": []
            }
        }
    },
    {
        "id": "consumable",
        "version": 1,
        "status": "proposed",
        "name": "Consumable",
        "attributes": {
            "consumableStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ConsumableState",
                            "type": "string",
                            "enum": [
                                "good",
                                "maintenance_required",
                                "missing",
                                "order",
                                "replace"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setConsumableStatus",
                "enumCommands": []
            }
        },
        "commands": {
            "setConsumableStatus": {
                "arguments": [
                    {
                        "name": "status",
                        "optional": false,
                        "schema": {
                            "title": "ConsumableState",
                            "type": "string",
                            "enum": [
                                "good",
                                "maintenance_required",
                                "missing",
                                "order",
                                "replace"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "contactSensor",
        "version": 1,
        "status": "live",
        "name": "Contact Sensor",
        "attributes": {
            "contact": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ContactState",
                            "type": "string",
                            "enum": [
                                "closed",
                                "open"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "demandResponseLoadControl",
        "version": 1,
        "status": "proposed",
        "name": "Demand Response Load Control",
        "attributes": {
            "drlcStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "DemandResponseLoadControlStatus",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "drlcType": {
                                    "title": "DrlcType",
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 1
                                },
                                "drlcLevel": {
                                    "title": "DrlcLevel",
                                    "type": "integer",
                                    "minimum": -1,
                                    "maximum": 3
                                },
                                "start": {
                                    "title": "Iso8601Date",
                                    "type": "string",
                                    "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                                },
                                "duration": {
                                    "title": "PositiveInteger",
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "override": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "overrideDrlcAction": {
                "arguments": [
                    {
                        "name": "value",
                        "optional": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ]
            },
            "requestDrlcAction": {
                "arguments": [
                    {
                        "name": "drlcType",
                        "optional": false,
                        "schema": {
                            "title": "DrlcType",
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 1
                        }
                    },
                    {
                        "name": "drlcLevel",
                        "optional": false,
                        "schema": {
                            "title": "DrlcLevel",
                            "type": "integer",
                            "minimum": -1,
                            "maximum": 3
                        }
                    },
                    {
                        "name": "start",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    {
                        "name": "duration",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "reportingPeriod",
                        "optional": true,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "dewPoint",
        "version": 1,
        "status": "proposed",
        "name": "Dew Point",
        "attributes": {
            "dewpoint": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "dishwasherMode",
        "version": 1,
        "status": "proposed",
        "name": "Dishwasher Mode",
        "attributes": {
            "dishwasherMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "DishwasherMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "quick",
                                "rinse",
                                "dry"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setDishwasherMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setDishwasherMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "DishwasherMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "quick",
                                "rinse",
                                "dry"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "dishwasherOperatingState",
        "version": 1,
        "status": "proposed",
        "name": "Dishwasher Operating State",
        "attributes": {
            "completionTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "machineState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setMachineState",
                "enumCommands": []
            },
            "supportedMachineStates": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MachineState",
                                "type": "string",
                                "enum": [
                                    "pause",
                                    "run",
                                    "stop"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "dishwasherJobState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "DishwasherJobState",
                            "type": "string",
                            "enum": [
                                "airwash",
                                "cooling",
                                "drying",
                                "finish",
                                "preDrain",
                                "prewash",
                                "rinse",
                                "spin",
                                "unknown",
                                "wash",
                                "wrinklePrevent"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setMachineState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "dishwasherOperationalState",
        "version": 1,
        "status": "deprecated",
        "name": "Dishwasher Operational State",
        "attributes": {
            "completionTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "machineState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setMachineState",
                "enumCommands": []
            },
            "supportedMachineStates": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MachineState",
                                "type": "string",
                                "enum": [
                                    "pause",
                                    "run",
                                    "stop"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "dishwasherJobState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "DishwasherJobState",
                            "type": "string",
                            "enum": [
                                "airwash",
                                "cooling",
                                "drying",
                                "finish",
                                "preDrain",
                                "prewash",
                                "rinse",
                                "spin",
                                "unknown",
                                "wash",
                                "wrinklePrevent"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setMachineState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "doorControl",
        "version": 1,
        "status": "live",
        "name": "Door Control",
        "attributes": {
            "door": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "closed",
                                "closing",
                                "open",
                                "opening",
                                "unknown"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "close",
                        "value": "closed"
                    },
                    {
                        "command": "open",
                        "value": "open"
                    }
                ]
            }
        },
        "commands": {
            "close": {
                "arguments": []
            },
            "open": {
                "arguments": []
            }
        }
    },
    {
        "id": "drivingStatus",
        "version": 1,
        "status": "proposed",
        "name": "Driving Status",
        "attributes": {
            "drivingStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "driving",
                                "notDriving"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "dryerMode",
        "version": 1,
        "status": "proposed",
        "name": "Dryer Mode",
        "attributes": {
            "dryerMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "DryerMode",
                            "type": "string",
                            "enum": [
                                "regular",
                                "lowHeat",
                                "highHeat"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setDryerMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setDryerMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "DryerMode",
                            "type": "string",
                            "enum": [
                                "regular",
                                "lowHeat",
                                "highHeat"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "dryerOperatingState",
        "version": 1,
        "status": "proposed",
        "name": "Dryer Operating State",
        "attributes": {
            "completionTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "machineState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setMachineState",
                "enumCommands": []
            },
            "supportedMachineStates": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MachineState",
                                "type": "string",
                                "enum": [
                                    "pause",
                                    "run",
                                    "stop"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "dryerJobState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "DryerJobState",
                            "type": "string",
                            "enum": [
                                "cooling",
                                "delayWash",
                                "drying",
                                "finished",
                                "none",
                                "refreshing",
                                "weightSensing",
                                "wrinklePrevent"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setMachineState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "dustHealthConcern",
        "version": 1,
        "status": "proposed",
        "name": "Dust Health Concern",
        "attributes": {
            "dustHealthConcern": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AirQualityHealthConcern",
                            "type": "string",
                            "enum": [
                                "good",
                                "moderate",
                                "slightlyUnhealthy",
                                "unhealthy",
                                "veryUnhealthy",
                                "hazardous"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "dustSensor",
        "version": 1,
        "status": "live",
        "name": "Dust Sensor",
        "attributes": {
            "dustLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "μg/m^3"
                            ],
                            "default": "μg/m^3"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "fineDustLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "μg/m^3"
                            ],
                            "default": "μg/m^3"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "elevatorCall",
        "version": 1,
        "status": "proposed",
        "name": "Elevator Call",
        "attributes": {
            "callStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "called",
                                "standby",
                                "unknown"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "call": {
                "arguments": []
            }
        }
    },
    {
        "id": "energyMeter",
        "version": 1,
        "status": "live",
        "name": "Energy Meter",
        "attributes": {
            "energy": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "Wh",
                                "kWh",
                                "mWh",
                                "kVAh"
                            ],
                            "default": "kWh"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "resetEnergyMeter": {
                "arguments": []
            }
        }
    },
    {
        "id": "equivalentCarbonDioxideMeasurement",
        "version": 1,
        "status": "live",
        "name": "Equivalent Carbon Dioxide Measurement",
        "attributes": {
            "equivalentCarbonDioxideMeasurement": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1000000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "ppm"
                            ],
                            "default": "ppm"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "estimatedTimeOfArrival",
        "version": 1,
        "status": "proposed",
        "name": "Estimated Time Of Arrival",
        "attributes": {
            "eta": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "execute",
        "version": 1,
        "status": "live",
        "name": "Execute",
        "attributes": {
            "data": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": true,
                            "required": []
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "execute": {
                "arguments": [
                    {
                        "name": "command",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "args",
                        "optional": true,
                        "schema": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "fanOscillationMode",
        "version": 1,
        "status": "proposed",
        "name": "Fan Oscillation Mode",
        "attributes": {
            "fanOscillationMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "FanOscillationMode",
                            "type": "string",
                            "enum": [
                                "fixed",
                                "vertical",
                                "horizontal",
                                "all",
                                "indirect",
                                "direct",
                                "fixedCenter",
                                "fixedLeft",
                                "fixedRight",
                                "far"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setFanOscillationMode": {
                "arguments": [
                    {
                        "name": "fanOscillationMode",
                        "optional": false,
                        "schema": {
                            "title": "FanOscillationMode",
                            "type": "string",
                            "enum": [
                                "fixed",
                                "vertical",
                                "horizontal",
                                "all",
                                "indirect",
                                "direct",
                                "fixedCenter",
                                "fixedLeft",
                                "fixedRight",
                                "far"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "fanSpeed",
        "version": 1,
        "status": "live",
        "name": "Fan Speed",
        "attributes": {
            "fanSpeed": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setFanSpeed",
                "enumCommands": []
            }
        },
        "commands": {
            "setFanSpeed": {
                "arguments": [
                    {
                        "name": "speed",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "feederOperatingState",
        "version": 1,
        "status": "proposed",
        "name": "Feeder Operating State",
        "attributes": {
            "feederOperatingState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "idle",
                                "feeding"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "startFeeding",
                        "value": "feeding"
                    }
                ]
            }
        },
        "commands": {
            "startFeeding": {
                "arguments": []
            }
        }
    },
    {
        "id": "feederPortion",
        "version": 1,
        "status": "proposed",
        "name": "Feeder Portion",
        "attributes": {
            "feedPortion": {
                "schema": {
                    "title": "FeedPortion",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 2000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "g",
                                "lbs",
                                "oz"
                            ],
                            "default": "g"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "setter": "setPortion",
                "enumCommands": []
            }
        },
        "commands": {
            "setPortion": {
                "arguments": [
                    {
                        "name": "portion",
                        "optional": false,
                        "schema": {
                            "title": "FeedPortion",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "value": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 2000
                                },
                                "unit": {
                                    "type": "string",
                                    "enum": [
                                        "g",
                                        "lbs",
                                        "oz"
                                    ],
                                    "default": "g"
                                }
                            },
                            "required": [
                                "value",
                                "unit"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "filterState",
        "version": 1,
        "status": "live",
        "name": "Filter State",
        "attributes": {
            "filterLifeRemaining": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "filterStatus",
        "version": 1,
        "status": "proposed",
        "name": "Filter Status",
        "attributes": {
            "filterStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "normal",
                                "replace"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "fineDustHealthConcern",
        "version": 1,
        "status": "proposed",
        "name": "Fine Dust Health Concern",
        "attributes": {
            "fineDustHealthConcern": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AirQualityHealthConcern",
                            "type": "string",
                            "enum": [
                                "good",
                                "moderate",
                                "slightlyUnhealthy",
                                "unhealthy",
                                "veryUnhealthy",
                                "hazardous"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "fineDustSensor",
        "version": 1,
        "status": "live",
        "name": "Fine Dust Sensor",
        "attributes": {
            "fineDustLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "μg/m^3"
                            ],
                            "default": "μg/m^3"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "firmwareUpdate",
        "version": 1,
        "status": "proposed",
        "name": "Firmware Update",
        "attributes": {
            "lastUpdateStatusReason": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "availableVersion": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "lastUpdateStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "updateSucceeded",
                                "updateFailed"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "state": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "normalOperation",
                                "updateInProgress"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "currentVersion": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "lastUpdateTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "updateFirmware": {
                "arguments": []
            },
            "checkForFirmwareUpdate": {
                "arguments": []
            }
        }
    },
    {
        "id": "formaldehydeMeasurement",
        "version": 1,
        "status": "live",
        "name": "Formaldehyde Measurement",
        "attributes": {
            "formaldehydeLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1000000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "ppm",
                                "mg/m^3"
                            ],
                            "default": "ppm"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "garageDoorControl",
        "version": 1,
        "status": "deprecated",
        "name": "Garage Door Control",
        "attributes": {
            "door": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "closed",
                                "closing",
                                "open",
                                "opening",
                                "unknown"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "close",
                        "value": "closed"
                    },
                    {
                        "command": "open",
                        "value": "open"
                    }
                ]
            }
        },
        "commands": {
            "close": {
                "arguments": []
            },
            "open": {
                "arguments": []
            }
        }
    },
    {
        "id": "gasDetector",
        "version": 1,
        "status": "proposed",
        "name": "Gas Detector",
        "attributes": {
            "gas": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "clear",
                                "detected",
                                "tested"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "gasMeter",
        "version": 1,
        "status": "proposed",
        "name": "Gas Meter",
        "attributes": {
            "gasMeterPrecision": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "GasMeterPrecision",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "volume": {
                                    "title": "VolumePrecision",
                                    "type": "number"
                                },
                                "calorific": {
                                    "title": "CalorificPrecision",
                                    "type": "number"
                                },
                                "conversion": {
                                    "title": "ConversionPrecision",
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "gasMeterCalorific": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "gasMeterTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "gasMeterVolume": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "m^3"
                            ],
                            "default": "m^3"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "gasMeterConversion": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "gasMeter": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "kWh"
                            ],
                            "default": "kWh"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "geofence",
        "version": 1,
        "status": "proposed",
        "name": "Geofence",
        "attributes": {
            "enableState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "EnableState",
                            "type": "string",
                            "enum": [
                                "enabled",
                                "disabled"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setEnableState",
                "enumCommands": []
            },
            "geofence": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "GeofenceRadiusData",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "longitude": {
                                    "type": "number"
                                },
                                "latitude": {
                                    "type": "number"
                                },
                                "radius": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setGeofence",
                "enumCommands": []
            },
            "name": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setName",
                "enumCommands": []
            }
        },
        "commands": {
            "setName": {
                "arguments": [
                    {
                        "name": "name",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "setEnableState": {
                "arguments": [
                    {
                        "name": "enableState",
                        "optional": false,
                        "schema": {
                            "title": "EnableState",
                            "type": "string",
                            "enum": [
                                "enabled",
                                "disabled"
                            ]
                        }
                    }
                ]
            },
            "setGeofence": {
                "arguments": [
                    {
                        "name": "geofence",
                        "optional": false,
                        "schema": {
                            "title": "GeofenceRadiusData",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "longitude": {
                                    "type": "number"
                                },
                                "latitude": {
                                    "type": "number"
                                },
                                "radius": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "geofences",
        "version": 1,
        "status": "deprecated",
        "name": "Geofences",
        "attributes": {
            "geofences": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "Geofence",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "id": {
                                        "title": "PositiveInteger",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "presence": {
                                        "title": "PresenceState",
                                        "type": "string",
                                        "enum": [
                                            "present",
                                            "not present"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "geolocation",
        "version": 1,
        "status": "proposed",
        "name": "Geolocation",
        "attributes": {
            "method": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "heading": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 360
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "latitude": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "maximum": 90,
                            "minimum": -90
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "accuracy": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "altitudeAccuracy": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "speed": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "longitude": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "maximum": 180,
                            "minimum": -180
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "lastUpdateTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "healthCheck",
        "version": 1,
        "status": "live",
        "name": "Health Check",
        "attributes": {
            "checkInterval": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 604800
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "s"
                            ],
                            "default": "s"
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [],
                            "properties": {
                                "deviceScheme": {
                                    "type": "string",
                                    "enum": [
                                        "MIXED",
                                        "TRACKED",
                                        "UNTRACKED"
                                    ]
                                },
                                "hubHardwareId": {
                                    "type": "string",
                                    "pattern": "^[0-9a-fA-F]{4}$"
                                },
                                "protocol": {
                                    "title": "DeviceHealthProtocol",
                                    "type": "string",
                                    "enum": [
                                        "zigbee",
                                        "zwave",
                                        "bluetooth",
                                        "lan",
                                        "cloud",
                                        "unknown",
                                        "ocf",
                                        "mqtt"
                                    ]
                                },
                                "offlinePingable": {
                                    "type": "string",
                                    "enum": [
                                        "0",
                                        "1"
                                    ]
                                },
                                "badProperty": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "healthStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "online",
                                "offline"
                            ]
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [],
                            "properties": {
                                "deviceScheme": {
                                    "type": "string",
                                    "enum": [
                                        "MIXED",
                                        "TRACKED",
                                        "UNTRACKED"
                                    ]
                                },
                                "badProperty": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "DeviceWatch-Enroll": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "DeviceHealthEnroll",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "scheme": {
                                    "type": "string",
                                    "enum": [
                                        "MIXED",
                                        "TRACKED",
                                        "UNTRACKED"
                                    ]
                                },
                                "protocol": {
                                    "title": "DeviceHealthProtocol",
                                    "type": "string",
                                    "enum": [
                                        "zigbee",
                                        "zwave",
                                        "bluetooth",
                                        "lan",
                                        "cloud",
                                        "unknown",
                                        "ocf",
                                        "mqtt"
                                    ]
                                },
                                "hubHardwareId": {
                                    "title": "String",
                                    "type": "string",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "DeviceWatch-DeviceStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "online",
                                "offline"
                            ]
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [],
                            "properties": {
                                "deviceScheme": {
                                    "type": "string",
                                    "enum": [
                                        "MIXED",
                                        "TRACKED",
                                        "UNTRACKED"
                                    ]
                                },
                                "badProperty": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "ping": {
                "arguments": []
            }
        }
    },
    {
        "id": "holdableButton",
        "version": 1,
        "status": "deprecated",
        "name": "Holdable Button",
        "attributes": {
            "button": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "held",
                                "pushed"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "numberOfButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "humidifierMode",
        "version": 1,
        "status": "proposed",
        "name": "Humidifier Mode",
        "attributes": {
            "humidifierMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "HumidifierMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "low",
                                "medium",
                                "high"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setHumidifierMode": {
                "arguments": [
                    {
                        "name": "humidifierMode",
                        "optional": false,
                        "schema": {
                            "title": "HumidifierMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "low",
                                "medium",
                                "high"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "illuminanceMeasurement",
        "version": 1,
        "status": "live",
        "name": "Illuminance Measurement",
        "attributes": {
            "illuminance": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "lux"
                            ],
                            "default": "lux"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "imageCapture",
        "version": 1,
        "status": "live",
        "name": "Image Capture",
        "attributes": {
            "image": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "URL",
                            "type": "string",
                            "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "take",
                "enumCommands": []
            },
            "encrypted": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "boolean"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "captureTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "take": {
                "arguments": [
                    {
                        "name": "correlationId",
                        "optional": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "reason",
                        "optional": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "indicator",
        "version": 1,
        "status": "deprecated",
        "name": "Indicator",
        "attributes": {
            "indicatorStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "never",
                                "when off",
                                "when on"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "indicatorNever",
                        "value": "never"
                    },
                    {
                        "command": "indicatorWhenOff",
                        "value": "when off"
                    },
                    {
                        "command": "indicatorWhenOn",
                        "value": "when on"
                    }
                ]
            }
        },
        "commands": {
            "indicatorNever": {
                "arguments": []
            },
            "indicatorWhenOn": {
                "arguments": []
            },
            "indicatorWhenOff": {
                "arguments": []
            }
        }
    },
    {
        "id": "infraredLevel",
        "version": 1,
        "status": "live",
        "name": "Infrared Level",
        "attributes": {
            "infraredLevel": {
                "schema": {
                    "title": "Percent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setInfraredLevel",
                "enumCommands": []
            }
        },
        "commands": {
            "setInfraredLevel": {
                "arguments": [
                    {
                        "name": "level",
                        "optional": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "languageSetting",
        "version": 1,
        "status": "proposed",
        "name": "Language Setting",
        "attributes": {
            "supportedLanguages": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "language": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setLanguage",
                "enumCommands": []
            }
        },
        "commands": {
            "setLanguage": {
                "arguments": [
                    {
                        "name": "language",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "light",
        "version": 1,
        "status": "deprecated",
        "name": "Light",
        "attributes": {
            "switch": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "SwitchState",
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "on",
                        "value": "on"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    }
                ]
            }
        },
        "commands": {
            "off": {
                "arguments": []
            },
            "on": {
                "arguments": []
            }
        }
    },
    {
        "id": "locationMode",
        "version": 1,
        "status": "live",
        "name": "Location Mode",
        "attributes": {
            "mode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "lock",
        "version": 1,
        "status": "live",
        "name": "Lock",
        "attributes": {
            "lock": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "LockState",
                            "type": "string",
                            "enum": [
                                "locked",
                                "unknown",
                                "unlocked",
                                "unlocked with timeout"
                            ]
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [],
                            "properties": {
                                "method": {
                                    "type": "string",
                                    "enum": [
                                        "manual",
                                        "keypad",
                                        "auto",
                                        "command",
                                        "rfid",
                                        "fingerprint",
                                        "bluetooth"
                                    ]
                                },
                                "codeId": {
                                    "type": "string"
                                },
                                "timeout": {
                                    "title": "Iso8601Date",
                                    "type": "string",
                                    "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "lock",
                        "value": "locked"
                    },
                    {
                        "command": "unlock",
                        "value": "unlocked"
                    }
                ]
            }
        },
        "commands": {
            "unlock": {
                "arguments": []
            },
            "lock": {
                "arguments": []
            }
        }
    },
    {
        "id": "lockCodes",
        "version": 1,
        "status": "proposed",
        "name": "Lock Codes",
        "attributes": {
            "codeLength": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setCodeLength",
                "enumCommands": []
            },
            "maxCodes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "maxCodeLength": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "codeChanged": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [],
                            "properties": {
                                "codeName": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "lock": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "LockState",
                            "type": "string",
                            "enum": [
                                "locked",
                                "unknown",
                                "unlocked",
                                "unlocked with timeout"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": [
                    {
                        "command": "lock",
                        "value": "locked"
                    },
                    {
                        "command": "unlock",
                        "value": "unlocked"
                    },
                    {
                        "command": "unlockWithTimeout",
                        "value": "unlocked with timeout"
                    }
                ]
            },
            "minCodeLength": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "codeReport": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "scanCodes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "lockCodes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setCodeLength": {
                "arguments": [
                    {
                        "name": "length",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            },
            "reloadAllCodes": {
                "arguments": []
            },
            "unlock": {
                "arguments": []
            },
            "unlockWithTimeout": {
                "arguments": []
            },
            "setCode": {
                "arguments": [
                    {
                        "name": "codeSlot",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "codePIN",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "codeName",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            },
            "updateCodes": {
                "arguments": [
                    {
                        "name": "codes",
                        "optional": false,
                        "schema": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    }
                ]
            },
            "lock": {
                "arguments": []
            },
            "requestCode": {
                "arguments": [
                    {
                        "name": "codeSlot",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            },
            "deleteCode": {
                "arguments": [
                    {
                        "name": "codeSlot",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            },
            "nameSlot": {
                "arguments": [
                    {
                        "name": "codeSlot",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "codeName",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "lockOnly",
        "version": 1,
        "status": "deprecated",
        "name": "Lock Only",
        "attributes": {
            "lock": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "LockState",
                            "type": "string",
                            "enum": [
                                "locked",
                                "unknown",
                                "unlocked",
                                "unlocked with timeout"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "lock",
                        "value": "locked"
                    }
                ]
            }
        },
        "commands": {
            "lock": {
                "arguments": []
            }
        }
    },
    {
        "id": "logTrigger",
        "version": 1,
        "status": "proposed",
        "name": "Log Trigger",
        "attributes": {
            "logState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "idle",
                                "inProgress"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "logRequestState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "idle",
                                "triggerRequired"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "logInfo": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "triggerLogWithUrl": {
                "arguments": [
                    {
                        "name": "url",
                        "optional": true,
                        "schema": {
                            "title": "URL",
                            "type": "string",
                            "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?$"
                        }
                    }
                ]
            },
            "triggerLogWithLogInfo": {
                "arguments": [
                    {
                        "name": "logInfo",
                        "optional": false,
                        "schema": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    }
                ]
            },
            "triggerLog": {
                "arguments": []
            }
        }
    },
    {
        "id": "mediaController",
        "version": 1,
        "status": "proposed",
        "name": "Media Controller",
        "attributes": {
            "currentActivity": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "activities": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "startActivity": {
                "arguments": [
                    {
                        "name": "activityId",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "mediaGroup",
        "version": 1,
        "status": "proposed",
        "name": "Media Group",
        "attributes": {
            "groupMute": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MuteState",
                            "type": "string",
                            "enum": [
                                "muted",
                                "unmuted"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setGroupMute",
                "enumCommands": [
                    {
                        "command": "muteGroup",
                        "value": "muted"
                    },
                    {
                        "command": "unmuteGroup",
                        "value": "unmuted"
                    }
                ]
            },
            "groupPrimaryDeviceId": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "groupId": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "groupVolume": {
                "schema": {
                    "title": "IntegerPercent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setGroupVolume",
                "enumCommands": []
            },
            "groupRole": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "primary",
                                "auxilary",
                                "ungrouped"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "groupVolumeUp": {
                "arguments": []
            },
            "groupVolumeDown": {
                "arguments": []
            },
            "muteGroup": {
                "arguments": []
            },
            "setGroupVolume": {
                "arguments": [
                    {
                        "name": "groupVolume",
                        "optional": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    }
                ]
            },
            "unmuteGroup": {
                "arguments": []
            },
            "setGroupMute": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "title": "MuteState",
                            "type": "string",
                            "enum": [
                                "muted",
                                "unmuted"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "mediaInputSource",
        "version": 1,
        "status": "proposed",
        "name": "Media Input Source",
        "attributes": {
            "supportedInputSources": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MediaSource",
                                "type": "string",
                                "enum": [
                                    "AM",
                                    "CD",
                                    "FM",
                                    "HDMI",
                                    "HDMI1",
                                    "HDMI2",
                                    "HDMI3",
                                    "HDMI4",
                                    "HDMI5",
                                    "HDMI6",
                                    "digitalTv",
                                    "USB",
                                    "YouTube",
                                    "aux",
                                    "bluetooth",
                                    "digital",
                                    "melon",
                                    "wifi"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "inputSource": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MediaSource",
                            "type": "string",
                            "enum": [
                                "AM",
                                "CD",
                                "FM",
                                "HDMI",
                                "HDMI1",
                                "HDMI2",
                                "HDMI3",
                                "HDMI4",
                                "HDMI5",
                                "HDMI6",
                                "digitalTv",
                                "USB",
                                "YouTube",
                                "aux",
                                "bluetooth",
                                "digital",
                                "melon",
                                "wifi"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setInputSource",
                "enumCommands": []
            }
        },
        "commands": {
            "setInputSource": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "MediaSource",
                            "type": "string",
                            "enum": [
                                "AM",
                                "CD",
                                "FM",
                                "HDMI",
                                "HDMI1",
                                "HDMI2",
                                "HDMI3",
                                "HDMI4",
                                "HDMI5",
                                "HDMI6",
                                "digitalTv",
                                "USB",
                                "YouTube",
                                "aux",
                                "bluetooth",
                                "digital",
                                "melon",
                                "wifi"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "mediaPlayback",
        "version": 1,
        "status": "proposed",
        "name": "Media Playback",
        "attributes": {
            "supportedPlaybackCommands": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MediaPlaybackCommands",
                                "type": "string",
                                "enum": [
                                    "pause",
                                    "play",
                                    "stop",
                                    "fastForward",
                                    "rewind"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "playbackStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "paused",
                                "playing",
                                "stopped",
                                "fast forwarding",
                                "rewinding"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setPlaybackStatus",
                "enumCommands": [
                    {
                        "command": "play",
                        "value": "playing"
                    },
                    {
                        "command": "pause",
                        "value": "paused"
                    },
                    {
                        "command": "stop",
                        "value": "stopped"
                    },
                    {
                        "command": "fastForward",
                        "value": "fast forwarding"
                    },
                    {
                        "command": "rewind",
                        "value": "rewinding"
                    }
                ]
            }
        },
        "commands": {
            "play": {
                "arguments": []
            },
            "stop": {
                "arguments": []
            },
            "rewind": {
                "arguments": []
            },
            "fastForward": {
                "arguments": []
            },
            "setPlaybackStatus": {
                "arguments": [
                    {
                        "name": "status",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "paused",
                                "playing",
                                "stopped",
                                "fast forwarding",
                                "rewinding"
                            ]
                        }
                    }
                ]
            },
            "pause": {
                "arguments": []
            }
        }
    },
    {
        "id": "mediaPlaybackRepeat",
        "version": 1,
        "status": "proposed",
        "name": "Media Playback Repeat",
        "attributes": {
            "playbackRepeatMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "all",
                                "off",
                                "one"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setPlaybackRepeatMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setPlaybackRepeatMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "all",
                                "off",
                                "one"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "mediaPlaybackShuffle",
        "version": 1,
        "status": "proposed",
        "name": "Media Playback Shuffle",
        "attributes": {
            "playbackShuffle": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "disabled",
                                "enabled"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setPlaybackShuffle",
                "enumCommands": []
            }
        },
        "commands": {
            "setPlaybackShuffle": {
                "arguments": [
                    {
                        "name": "shuffle",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "disabled",
                                "enabled"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "mediaPresets",
        "version": 1,
        "status": "proposed",
        "name": "Media Presets",
        "attributes": {
            "presets": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MediaPreset",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "mediaSource": {
                                        "type": "string"
                                    },
                                    "imageUrl": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "name"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "playPreset": {
                "arguments": [
                    {
                        "name": "presetId",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "mediaTrackControl",
        "version": 1,
        "status": "proposed",
        "name": "Media Track Control",
        "attributes": {
            "supportedTrackControlCommands": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MediaTrackCommands",
                                "type": "string",
                                "enum": [
                                    "previousTrack",
                                    "nextTrack"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "previousTrack": {
                "arguments": []
            },
            "nextTrack": {
                "arguments": []
            }
        }
    },
    {
        "id": "moldHealthConcern",
        "version": 1,
        "status": "proposed",
        "name": "Mold Health Concern",
        "attributes": {
            "moldHealthConcern": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AirQualityHealthConcern",
                            "type": "string",
                            "enum": [
                                "good",
                                "moderate",
                                "slightlyUnhealthy",
                                "unhealthy",
                                "veryUnhealthy",
                                "hazardous"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "momentary",
        "version": 1,
        "status": "live",
        "name": "Momentary",
        "attributes": {},
        "commands": {
            "push": {
                "arguments": []
            }
        }
    },
    {
        "id": "motionSensor",
        "version": 1,
        "status": "live",
        "name": "Motion Sensor",
        "attributes": {
            "motion": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ActivityState",
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "musicPlayer",
        "version": 1,
        "status": "deprecated",
        "name": "Music Player",
        "attributes": {
            "trackDescription": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "level": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setLevel",
                "enumCommands": []
            },
            "mute": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MuteState",
                            "type": "string",
                            "enum": [
                                "muted",
                                "unmuted"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": [
                    {
                        "command": "mute",
                        "value": "muted"
                    },
                    {
                        "command": "unmute",
                        "value": "unmuted"
                    }
                ]
            },
            "trackData": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "status": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "play": {
                "arguments": []
            },
            "restoreTrack": {
                "arguments": [
                    {
                        "name": "trackToRestore",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            },
            "resumeTrack": {
                "arguments": [
                    {
                        "name": "trackToResume",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            },
            "stop": {
                "arguments": []
            },
            "previousTrack": {
                "arguments": []
            },
            "nextTrack": {
                "arguments": []
            },
            "mute": {
                "arguments": []
            },
            "setTrack": {
                "arguments": [
                    {
                        "name": "trackToSet",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            },
            "unmute": {
                "arguments": []
            },
            "playTrack": {
                "arguments": [
                    {
                        "name": "trackToPlay",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            },
            "pause": {
                "arguments": []
            },
            "setLevel": {
                "arguments": [
                    {
                        "name": "level",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "networkMeter",
        "version": 1,
        "status": "live",
        "name": "Network Meter",
        "attributes": {
            "uplinkSpeed": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "downlinkSpeed": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "notification",
        "version": 1,
        "status": "live",
        "name": "Notification",
        "attributes": {},
        "commands": {
            "deviceNotification": {
                "arguments": [
                    {
                        "name": "notification",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "objectDetection",
        "version": 1,
        "status": "live",
        "name": "Object Detection",
        "attributes": {
            "detected": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ObjectDetectionValue",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "value": {
                                    "title": "String",
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "qty": {
                                    "title": "PositiveInteger",
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "data": {
                                    "title": "JsonObject",
                                    "type": "object"
                                }
                            },
                            "required": [
                                "value"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "supportedValues": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "String",
                                "type": "string",
                                "maxLength": 255
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "occupancySensor",
        "version": 1,
        "status": "proposed",
        "name": "Occupancy Sensor",
        "attributes": {
            "occupancy": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "OccupancyState",
                            "type": "string",
                            "enum": [
                                "occupied",
                                "unoccupied"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "ocf",
        "version": 1,
        "status": "proposed",
        "name": "Ocf",
        "attributes": {
            "st": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mndt": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mnfv": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mnhw": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "di": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mnsl": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "dmv": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "n": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mnmo": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "vid": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mnmn": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mnml": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mnpv": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mnos": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "pi": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "icv": {
                "schema": {
                    "title": "StringAttribute",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "postOcfCommand": {
                "arguments": [
                    {
                        "name": "href",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "value",
                        "optional": false,
                        "schema": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "odorSensor",
        "version": 1,
        "status": "proposed",
        "name": "Odor Sensor",
        "attributes": {
            "odorLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "outlet",
        "version": 1,
        "status": "deprecated",
        "name": "Outlet",
        "attributes": {
            "switch": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "SwitchState",
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "on",
                        "value": "on"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    }
                ]
            }
        },
        "commands": {
            "off": {
                "arguments": []
            },
            "on": {
                "arguments": []
            }
        }
    },
    {
        "id": "ovenMode",
        "version": 1,
        "status": "proposed",
        "name": "Oven Mode",
        "attributes": {
            "supportedOvenModes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "OvenMode",
                                "type": "string",
                                "enum": [
                                    "heating",
                                    "grill",
                                    "warming",
                                    "defrosting",
                                    "Conventional",
                                    "Bake",
                                    "BottomHeat",
                                    "ConvectionBake",
                                    "ConvectionRoast",
                                    "Broil",
                                    "ConvectionBroil",
                                    "SteamCook",
                                    "SteamBake",
                                    "SteamRoast",
                                    "SteamBottomHeatplusConvection",
                                    "Microwave",
                                    "MWplusGrill",
                                    "MWplusConvection",
                                    "MWplusHotBlast",
                                    "MWplusHotBlast2",
                                    "SlimMiddle",
                                    "SlimStrong",
                                    "SlowCook",
                                    "Proof",
                                    "Dehydrate",
                                    "Others"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "ovenMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "OvenMode",
                            "type": "string",
                            "enum": [
                                "heating",
                                "grill",
                                "warming",
                                "defrosting",
                                "Conventional",
                                "Bake",
                                "BottomHeat",
                                "ConvectionBake",
                                "ConvectionRoast",
                                "Broil",
                                "ConvectionBroil",
                                "SteamCook",
                                "SteamBake",
                                "SteamRoast",
                                "SteamBottomHeatplusConvection",
                                "Microwave",
                                "MWplusGrill",
                                "MWplusConvection",
                                "MWplusHotBlast",
                                "MWplusHotBlast2",
                                "SlimMiddle",
                                "SlimStrong",
                                "SlowCook",
                                "Proof",
                                "Dehydrate",
                                "Others"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setOvenMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setOvenMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "OvenMode",
                            "type": "string",
                            "enum": [
                                "heating",
                                "grill",
                                "warming",
                                "defrosting",
                                "Conventional",
                                "Bake",
                                "BottomHeat",
                                "ConvectionBake",
                                "ConvectionRoast",
                                "Broil",
                                "ConvectionBroil",
                                "SteamCook",
                                "SteamBake",
                                "SteamRoast",
                                "SteamBottomHeatplusConvection",
                                "Microwave",
                                "MWplusGrill",
                                "MWplusConvection",
                                "MWplusHotBlast",
                                "MWplusHotBlast2",
                                "SlimMiddle",
                                "SlimStrong",
                                "SlowCook",
                                "Proof",
                                "Dehydrate",
                                "Others"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "ovenOperatingState",
        "version": 1,
        "status": "proposed",
        "name": "Oven Operating State",
        "attributes": {
            "completionTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "machineState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "ready",
                                "running",
                                "paused"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setMachineState",
                "enumCommands": []
            },
            "progress": {
                "schema": {
                    "title": "IntegerPercent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "supportedMachineStates": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ready",
                                    "running",
                                    "paused"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "ovenJobState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "cleaning",
                                "cooking",
                                "cooling",
                                "draining",
                                "preheat",
                                "ready",
                                "rinsing"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "operationTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "stop": {
                "arguments": []
            },
            "setMachineState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "stop"
                            ]
                        }
                    }
                ]
            },
            "start": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": true,
                        "schema": {
                            "title": "OvenMode",
                            "type": "string",
                            "enum": [
                                "heating",
                                "grill",
                                "warming",
                                "defrosting",
                                "Conventional",
                                "Bake",
                                "BottomHeat",
                                "ConvectionBake",
                                "ConvectionRoast",
                                "Broil",
                                "ConvectionBroil",
                                "SteamCook",
                                "SteamBake",
                                "SteamRoast",
                                "SteamBottomHeatplusConvection",
                                "Microwave",
                                "MWplusGrill",
                                "MWplusConvection",
                                "MWplusHotBlast",
                                "MWplusHotBlast2",
                                "SlimMiddle",
                                "SlimStrong",
                                "SlowCook",
                                "Proof",
                                "Dehydrate",
                                "Others"
                            ]
                        }
                    },
                    {
                        "name": "time",
                        "optional": true,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "setpoint",
                        "optional": true,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "ovenOperationalState",
        "version": 1,
        "status": "deprecated",
        "name": "Oven Operational State",
        "attributes": {
            "completionTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "machineState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "ready",
                                "running",
                                "paused"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setMachineState",
                "enumCommands": []
            },
            "progress": {
                "schema": {
                    "title": "IntegerPercent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "supportedMachineStates": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ready",
                                    "running",
                                    "paused"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "ovenJobState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "cleaning",
                                "cooking",
                                "cooling",
                                "draining",
                                "preheat",
                                "ready",
                                "rinsing"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "operationTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "stop": {
                "arguments": []
            },
            "setMachineState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "stop"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "ovenSetpoint",
        "version": 1,
        "status": "proposed",
        "name": "Oven Setpoint",
        "attributes": {
            "ovenSetpoint": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setOvenSetpoint",
                "enumCommands": []
            }
        },
        "commands": {
            "setOvenSetpoint": {
                "arguments": [
                    {
                        "name": "setpoint",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "pHMeasurement",
        "version": 1,
        "status": "live",
        "name": "pH Measurement",
        "attributes": {
            "pH": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 14
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "pH"
                            ],
                            "default": "pH"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "panicAlarm",
        "version": 1,
        "status": "live",
        "name": "Panic Alarm",
        "attributes": {
            "panicAlarm": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "panic",
                                "clear"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "pestControl",
        "version": 1,
        "status": "proposed",
        "name": "Pest Control",
        "attributes": {
            "pestControl": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "idle",
                                "trapArmed",
                                "trapRearmRequired",
                                "pestDetected",
                                "pestExterminated"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "polling",
        "version": 1,
        "status": "deprecated",
        "name": "Polling",
        "attributes": {},
        "commands": {
            "poll": {
                "arguments": []
            }
        }
    },
    {
        "id": "powerConsumptionReport",
        "version": 1,
        "status": "proposed",
        "name": "Power Consumption Report",
        "attributes": {
            "powerConsumption": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PowerConsumption",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "start": {
                                    "title": "Iso8601Date",
                                    "type": "string",
                                    "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                                },
                                "end": {
                                    "title": "Iso8601Date",
                                    "type": "string",
                                    "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                                },
                                "energy": {
                                    "type": "number"
                                },
                                "power": {
                                    "type": "number"
                                },
                                "deltaEnergy": {
                                    "type": "number"
                                },
                                "powerEnergy": {
                                    "type": "number"
                                },
                                "energySaved": {
                                    "type": "number"
                                },
                                "persistedEnergy": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "powerMeter",
        "version": 1,
        "status": "live",
        "name": "Power Meter",
        "attributes": {
            "power": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "W"
                            ],
                            "default": "W"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "powerSource",
        "version": 1,
        "status": "live",
        "name": "Power Source",
        "attributes": {
            "powerSource": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "battery",
                                "dc",
                                "mains",
                                "unknown"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "precipitationMeasurement",
        "version": 1,
        "status": "proposed",
        "name": "Precipitation Measurement",
        "attributes": {
            "precipitationLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveNumber",
                            "type": "number",
                            "minimum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "mm",
                                "in"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "resetPrecipitationLevel": {
                "arguments": []
            }
        }
    },
    {
        "id": "precipitationRate",
        "version": 1,
        "status": "proposed",
        "name": "Precipitation Rate",
        "attributes": {
            "precipitationRate": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveNumber",
                            "type": "number",
                            "minimum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "mm/h",
                                "in/h"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "precipitationSensor",
        "version": 1,
        "status": "proposed",
        "name": "Precipitation Sensor",
        "attributes": {
            "precipitationIntensity": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "none",
                                "possiblePrecipitation",
                                "light",
                                "moderate",
                                "heavy",
                                "violent"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "presenceSensor",
        "version": 1,
        "status": "live",
        "name": "Presence Sensor",
        "attributes": {
            "presence": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PresenceState",
                            "type": "string",
                            "enum": [
                                "present",
                                "not present"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "radonHealthConcern",
        "version": 1,
        "status": "proposed",
        "name": "Radon Health Concern",
        "attributes": {
            "radonHealthConcern": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AirQualityHealthConcern",
                            "type": "string",
                            "enum": [
                                "good",
                                "moderate",
                                "slightlyUnhealthy",
                                "unhealthy",
                                "veryUnhealthy",
                                "hazardous"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "radonMeasurement",
        "version": 1,
        "status": "proposed",
        "name": "Radon Measurement",
        "attributes": {
            "radonLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "pCi/L"
                            ],
                            "default": "pCi/L"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "rapidCooling",
        "version": 1,
        "status": "proposed",
        "name": "Rapid Cooling",
        "attributes": {
            "rapidCooling": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setRapidCooling",
                "enumCommands": []
            }
        },
        "commands": {
            "setRapidCooling": {
                "arguments": [
                    {
                        "name": "rapidCooling",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "refresh",
        "version": 1,
        "status": "live",
        "name": "Refresh",
        "attributes": {},
        "commands": {
            "refresh": {
                "arguments": []
            }
        }
    },
    {
        "id": "refrigeration",
        "version": 1,
        "status": "live",
        "name": "Refrigeration",
        "attributes": {
            "defrost": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setDefrost",
                "enumCommands": []
            },
            "rapidCooling": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setRapidCooling",
                "enumCommands": []
            },
            "rapidFreezing": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setRapidFreezing",
                "enumCommands": []
            }
        },
        "commands": {
            "setDefrost": {
                "arguments": [
                    {
                        "name": "rapidCooling",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on"
                            ]
                        }
                    }
                ]
            },
            "setRapidFreezing": {
                "arguments": [
                    {
                        "name": "rapidCooling",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on"
                            ]
                        }
                    }
                ]
            },
            "setRapidCooling": {
                "arguments": [
                    {
                        "name": "rapidCooling",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "refrigerationSetpoint",
        "version": 1,
        "status": "proposed",
        "name": "Refrigeration Setpoint",
        "attributes": {
            "refrigerationSetpoint": {
                "schema": {
                    "title": "Temperature",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "setter": "setRefrigerationSetpoint",
                "enumCommands": []
            }
        },
        "commands": {
            "setRefrigerationSetpoint": {
                "arguments": [
                    {
                        "name": "setpoint",
                        "optional": false,
                        "schema": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "relativeBrightness",
        "version": 1,
        "status": "proposed",
        "name": "Relative Brightness",
        "attributes": {
            "brightnessIntensity": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 7
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "level"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "relativeHumidityMeasurement",
        "version": 1,
        "status": "live",
        "name": "Relative Humidity Measurement",
        "attributes": {
            "humidity": {
                "schema": {
                    "title": "Percent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "relaySwitch",
        "version": 1,
        "status": "deprecated",
        "name": "Relay Switch",
        "attributes": {
            "switch": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "SwitchState",
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "on",
                        "value": "on"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    }
                ]
            }
        },
        "commands": {
            "off": {
                "arguments": []
            },
            "on": {
                "arguments": []
            }
        }
    },
    {
        "id": "remoteControlStatus",
        "version": 1,
        "status": "live",
        "name": "Remote Control Status",
        "attributes": {
            "remoteControlEnabled": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "false",
                                "true"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "robotCleanerCleaningMode",
        "version": 1,
        "status": "proposed",
        "name": "Robot Cleaner Cleaning Mode",
        "attributes": {
            "robotCleanerCleaningMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "auto",
                                "part",
                                "repeat",
                                "manual",
                                "stop",
                                "map"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setRobotCleanerCleaningMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setRobotCleanerCleaningMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "auto",
                                "part",
                                "repeat",
                                "manual",
                                "stop"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "robotCleanerMovement",
        "version": 1,
        "status": "proposed",
        "name": "Robot Cleaner Movement",
        "attributes": {
            "robotCleanerMovement": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "homing",
                                "idle",
                                "charging",
                                "alarm",
                                "powerOff",
                                "reserve",
                                "point",
                                "after",
                                "cleaning",
                                "pause"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setRobotCleanerMovement",
                "enumCommands": []
            }
        },
        "commands": {
            "setRobotCleanerMovement": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "homing",
                                "idle",
                                "charging",
                                "alarm",
                                "powerOff",
                                "reserve",
                                "point",
                                "after",
                                "cleaning",
                                "pause"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "robotCleanerState",
        "version": 1,
        "status": "deprecated",
        "name": "Robot Cleaner State",
        "attributes": {
            "robotCleanerTurboState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "turboOff",
                                "turboOn",
                                "turboSilence"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setRobotCleanerTurboState",
                "enumCommands": []
            },
            "robotCleanerCleaningState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "cleaningAuto",
                                "cleaningManual",
                                "cleaningPart",
                                "cleaningRepeat",
                                "cleaningStop"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setRobotCleanerCleaningState",
                "enumCommands": []
            },
            "supportedRobotCleanerStates": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "cleaningAuto",
                                    "cleaningManual",
                                    "cleaningPart",
                                    "cleaningRepeat",
                                    "cleaningStop"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "robotCleanerControlState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "controlAfter",
                                "controlAlarm",
                                "controlCharging",
                                "controlCleaning",
                                "controlHoming",
                                "controlIdle",
                                "controlPause",
                                "controlPoint",
                                "controlPowerOff",
                                "controlReserve"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setRobotCleanerControlState",
                "enumCommands": []
            }
        },
        "commands": {
            "setRobotCleanerCleaningState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cleaningAuto",
                                "cleaningStop"
                            ]
                        }
                    }
                ]
            },
            "stop": {
                "arguments": []
            },
            "setRobotCleanerControlState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "controlHoming"
                            ]
                        }
                    }
                ]
            },
            "setRobotCleanerTurboState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "turboOff",
                                "turboOn",
                                "turboSilence"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "robotCleanerTurboMode",
        "version": 1,
        "status": "proposed",
        "name": "Robot Cleaner Turbo Mode",
        "attributes": {
            "robotCleanerTurboMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off",
                                "silence"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setRobotCleanerTurboMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setRobotCleanerTurboMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off",
                                "silence"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "samsungTV",
        "version": 1,
        "status": "live",
        "name": "Samsung TV",
        "attributes": {
            "volume": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setVolume",
                "enumCommands": []
            },
            "pictureMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "dynamic",
                                "movie",
                                "standard",
                                "unknown"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setPictureMode",
                "enumCommands": []
            },
            "messageButton": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "soundMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "clear voice",
                                "movie",
                                "music",
                                "standard",
                                "unknown"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setSoundMode",
                "enumCommands": []
            },
            "mute": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "muted",
                                "unknown",
                                "unmuted"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": [
                    {
                        "command": "mute",
                        "value": "muted"
                    },
                    {
                        "command": "unmute",
                        "value": "unmuted"
                    }
                ]
            },
            "switch": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "SwitchState",
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": [
                    {
                        "command": "on",
                        "value": "on"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    }
                ]
            }
        },
        "commands": {
            "setPictureMode": {
                "arguments": [
                    {
                        "name": "pictureMode",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "dynamic",
                                "movie",
                                "standard"
                            ]
                        }
                    }
                ]
            },
            "volumeDown": {
                "arguments": []
            },
            "setSoundMode": {
                "arguments": [
                    {
                        "name": "soundMode",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "clear voice",
                                "movie",
                                "music",
                                "standard"
                            ]
                        }
                    }
                ]
            },
            "showMessage": {
                "arguments": [
                    {
                        "name": "1",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "2",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "3",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "4",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            },
            "volumeUp": {
                "arguments": []
            },
            "mute": {
                "arguments": []
            },
            "unmute": {
                "arguments": []
            },
            "setVolume": {
                "arguments": [
                    {
                        "name": "volume",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            },
            "off": {
                "arguments": []
            },
            "on": {
                "arguments": []
            }
        }
    },
    {
        "id": "scent",
        "version": 1,
        "status": "proposed",
        "name": "Scent",
        "attributes": {
            "scentName": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "scentIntensity": {
                "schema": {
                    "title": "IntegerPercent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setScentIntensity",
                "enumCommands": []
            }
        },
        "commands": {
            "setScentIntensity": {
                "arguments": [
                    {
                        "name": "intensity",
                        "optional": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "securitySystem",
        "version": 1,
        "status": "live",
        "name": "Security System",
        "attributes": {
            "alarm": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "securitySystemStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "armedAway",
                                "armedStay",
                                "disarmed"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "armStay",
                        "value": "armedStay"
                    },
                    {
                        "command": "armAway",
                        "value": "armedAway"
                    },
                    {
                        "command": "disarm",
                        "value": "disarmed"
                    }
                ]
            }
        },
        "commands": {
            "armStay": {
                "arguments": [
                    {
                        "name": "bypassAll",
                        "optional": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ]
            },
            "disarm": {
                "arguments": []
            },
            "armAway": {
                "arguments": [
                    {
                        "name": "bypassAll",
                        "optional": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "sensor",
        "version": 1,
        "status": "deprecated",
        "name": "Sensor",
        "attributes": {},
        "commands": {}
    },
    {
        "id": "shockSensor",
        "version": 1,
        "status": "deprecated",
        "name": "Shock Sensor",
        "attributes": {
            "shock": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "clear",
                                "detected"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "signalStrength",
        "version": 1,
        "status": "live",
        "name": "Signal Strength",
        "attributes": {
            "rssi": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": -200,
                            "maximum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "dBm"
                            ],
                            "default": "dBm"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "lqi": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "sleepSensor",
        "version": 1,
        "status": "live",
        "name": "Sleep Sensor",
        "attributes": {
            "sleeping": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "not sleeping",
                                "sleeping"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "smokeDetector",
        "version": 1,
        "status": "live",
        "name": "Smoke Detector",
        "attributes": {
            "smoke": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "clear",
                                "detected",
                                "tested"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "soundDetection",
        "version": 1,
        "status": "proposed",
        "name": "Sound Detection",
        "attributes": {
            "soundDetectionState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "EnableState",
                            "type": "string",
                            "enum": [
                                "enabled",
                                "disabled"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "enableSoundDetection",
                        "value": "enabled"
                    },
                    {
                        "command": "disableSoundDetection",
                        "value": "disabled"
                    }
                ]
            },
            "supportedSoundTypes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "DetectedSoundType",
                                "type": "string",
                                "enum": [
                                    "noSound",
                                    "babyCrying",
                                    "glassBreaking",
                                    "fireAlarm",
                                    "dogBarking",
                                    "catMeowing",
                                    "doorKnocking"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "soundDetected": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "DetectedSoundType",
                            "type": "string",
                            "enum": [
                                "noSound",
                                "babyCrying",
                                "glassBreaking",
                                "fireAlarm",
                                "dogBarking",
                                "catMeowing",
                                "doorKnocking"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "disableSoundDetection": {
                "arguments": []
            },
            "enableSoundDetection": {
                "arguments": []
            }
        }
    },
    {
        "id": "soundPressureLevel",
        "version": 1,
        "status": "live",
        "name": "Sound Pressure Level",
        "attributes": {
            "soundPressureLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 194
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "dB"
                            ],
                            "default": "dB"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "soundSensor",
        "version": 1,
        "status": "live",
        "name": "Sound Sensor",
        "attributes": {
            "sound": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "detected",
                                "not detected"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "speechRecognition",
        "version": 1,
        "status": "proposed",
        "name": "Speech Recognition",
        "attributes": {
            "phraseSpoken": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "maxLength": 1000
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "speechSynthesis",
        "version": 1,
        "status": "proposed",
        "name": "Speech Synthesis",
        "attributes": {},
        "commands": {
            "speak": {
                "arguments": [
                    {
                        "name": "phrase",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 1000
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessAirCleanerModeButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Air Cleaner Mode Button",
        "attributes": {
            "availableAirCleanerModeButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "changeMode"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "changeMode"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessAudioMuteButton",
        "version": 1,
        "status": "live",
        "name": "Stateless Audio Mute Button",
        "attributes": {
            "availableAudioMuteButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "muteToggle"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "muteToggle"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessAudioVolumeButton",
        "version": 1,
        "status": "live",
        "name": "Stateless Audio Volume Button",
        "attributes": {
            "availableAudioVolumeButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "volumeUp",
                                    "volumeDown"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "volumeUp",
                                "volumeDown"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessChannelButton",
        "version": 1,
        "status": "live",
        "name": "Stateless Channel Button",
        "attributes": {
            "availableChannelButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "channelUp",
                                    "channelDown"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "channelUp",
                                "channelDown"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessCurtainPowerButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Curtain Power Button",
        "attributes": {
            "availableCurtainPowerButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "open",
                                    "close",
                                    "pause"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "open",
                                "close",
                                "pause"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessCustomButton",
        "version": 1,
        "status": "live",
        "name": "Stateless Custom Button",
        "attributes": {
            "availableCustomButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessFanspeedButton",
        "version": 1,
        "status": "live",
        "name": "Stateless Fanspeed Button",
        "attributes": {
            "availableFanspeedButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "fanspeedUp",
                                    "fanspeedDown"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "fanspeedUp",
                                "fanspeedDown"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessFanspeedModeButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Fanspeed Mode Button",
        "attributes": {
            "availableFanspeedModeButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "changeMode"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "changeMode"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessHumidifierModeButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Humidifier Mode Button",
        "attributes": {
            "availableHumidifierModeButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "changeMode"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "changeMode"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessMediaPlaybackButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Media Playback Button",
        "attributes": {
            "availableMediaPlaybackButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MediaPlaybackCommands",
                                "type": "string",
                                "enum": [
                                    "pause",
                                    "play",
                                    "stop",
                                    "fastForward",
                                    "rewind"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "title": "MediaPlaybackCommands",
                            "type": "string",
                            "enum": [
                                "pause",
                                "play",
                                "stop",
                                "fastForward",
                                "rewind"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessPowerButton",
        "version": 1,
        "status": "live",
        "name": "Stateless Power Button",
        "attributes": {
            "availablePowerButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "powerOn",
                                    "powerOff"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "powerOn",
                                "powerOff"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessPowerToggleButton",
        "version": 1,
        "status": "live",
        "name": "Stateless Power Toggle Button",
        "attributes": {
            "availablePowerToggleButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "powerToggle"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "powerToggle"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessRobotCleanerActionButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Robot Cleaner Action Button",
        "attributes": {
            "availableRobotCleanerActionButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "start",
                                    "stop",
                                    "quit"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "start",
                                "stop",
                                "quit"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessRobotCleanerHomeButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Robot Cleaner Home Button",
        "attributes": {
            "availableRobotCleanerHomeButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "home"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "home"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessRobotCleanerToggleButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Robot Cleaner Toggle Button",
        "attributes": {
            "availableRobotCleanerToggleButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "actionToggle"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "actionToggle"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessSetChannelButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Set Channel Button",
        "attributes": {},
        "commands": {
            "setChannel": {
                "arguments": [
                    {
                        "name": "channel",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessSetChannelByContentButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Set Channel By Content Button",
        "attributes": {},
        "commands": {
            "setChannelByContent": {
                "arguments": [
                    {
                        "name": "contentName",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessSetChannelByNameButton",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Set Channel By Name Button",
        "attributes": {},
        "commands": {
            "setChannelByName": {
                "arguments": [
                    {
                        "name": "channel",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessTemperatureButton",
        "version": 1,
        "status": "live",
        "name": "Stateless Temperature Button",
        "attributes": {
            "availableTemperatureButtons": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "temperatureUp",
                                    "temperatureDown"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setButton": {
                "arguments": [
                    {
                        "name": "button",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "temperatureUp",
                                "temperatureDown"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "statelessVolumeButtonWithRepetition",
        "version": 1,
        "status": "proposed",
        "name": "Stateless Volume Button With Repetition",
        "attributes": {},
        "commands": {
            "volumeDown": {
                "arguments": [
                    {
                        "name": "repetition",
                        "optional": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 10
                        }
                    }
                ]
            },
            "volumeUp": {
                "arguments": [
                    {
                        "name": "repetition",
                        "optional": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 10
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "stepSensor",
        "version": 1,
        "status": "proposed",
        "name": "Step Sensor",
        "attributes": {
            "goal": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "steps": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "switch",
        "version": 1,
        "status": "live",
        "name": "Switch",
        "attributes": {
            "switch": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "SwitchState",
                            "type": "string",
                            "enum": [
                                "on",
                                "off"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "on",
                        "value": "on"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    }
                ]
            }
        },
        "commands": {
            "off": {
                "arguments": []
            },
            "on": {
                "arguments": []
            }
        }
    },
    {
        "id": "switchLevel",
        "version": 1,
        "status": "live",
        "name": "Switch Level",
        "attributes": {
            "level": {
                "schema": {
                    "title": "IntegerPercent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setLevel",
                "enumCommands": []
            }
        },
        "commands": {
            "setLevel": {
                "arguments": [
                    {
                        "name": "level",
                        "optional": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "rate",
                        "optional": true,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "tV",
        "version": 1,
        "status": "live",
        "name": "TV",
        "attributes": {
            "volume": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "movieMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "sound": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "channel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "power": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "picture": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "volumeDown": {
                "arguments": []
            },
            "volumeUp": {
                "arguments": []
            },
            "channelDown": {
                "arguments": []
            },
            "channelUp": {
                "arguments": []
            }
        }
    },
    {
        "id": "tamperAlert",
        "version": 1,
        "status": "live",
        "name": "Tamper Alert",
        "attributes": {
            "tamper": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "clear",
                                "detected"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "temperatureAlarm",
        "version": 1,
        "status": "live",
        "name": "Temperature Alarm",
        "attributes": {
            "temperatureAlarm": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "cleared",
                                "freeze",
                                "heat",
                                "rateOfRise"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "temperatureMeasurement",
        "version": 1,
        "status": "live",
        "name": "Temperature Measurement",
        "attributes": {
            "temperature": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "testCapability",
        "version": 1,
        "status": "live",
        "name": "Test Capability",
        "attributes": {},
        "commands": {}
    },
    {
        "id": "thermostat",
        "version": 1,
        "status": "deprecated",
        "name": "Thermostat",
        "attributes": {
            "thermostatSetpointRange": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": [
                                {
                                    "title": "TemperatureValue",
                                    "type": "number",
                                    "minimum": -460,
                                    "maximum": 10000
                                },
                                {
                                    "title": "TemperatureValue",
                                    "type": "number",
                                    "minimum": -460,
                                    "maximum": 10000
                                }
                            ],
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "heatingSetpointRange": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": [
                                {
                                    "title": "TemperatureValue",
                                    "type": "number",
                                    "minimum": -460,
                                    "maximum": 10000
                                },
                                {
                                    "title": "TemperatureValue",
                                    "type": "number",
                                    "minimum": -460,
                                    "maximum": 10000
                                }
                            ],
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "thermostatSetpoint": {
                "schema": {
                    "title": "Temperature",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            },
            "supportedThermostatFanModes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "ThermostatFanMode",
                                "type": "string",
                                "enum": [
                                    "auto",
                                    "circulate",
                                    "followschedule",
                                    "on"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "schedule": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setSchedule",
                "enumCommands": []
            },
            "coolingSetpointRange": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": [
                                {
                                    "title": "TemperatureValue",
                                    "type": "number",
                                    "minimum": -460,
                                    "maximum": 10000
                                },
                                {
                                    "title": "TemperatureValue",
                                    "type": "number",
                                    "minimum": -460,
                                    "maximum": 10000
                                }
                            ],
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "heatingSetpoint": {
                "schema": {
                    "title": "Temperature",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "setter": "setHeatingSetpoint",
                "enumCommands": []
            },
            "coolingSetpoint": {
                "schema": {
                    "title": "Temperature",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "setter": "setCoolingSetpoint",
                "enumCommands": []
            },
            "thermostatOperatingState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ThermostatOperatingState",
                            "type": "string",
                            "enum": [
                                "cooling",
                                "fan only",
                                "heating",
                                "idle",
                                "pending cool",
                                "pending heat",
                                "vent economizer"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "temperature": {
                "schema": {
                    "title": "Temperature",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            },
            "thermostatFanMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ThermostatFanMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "circulate",
                                "followschedule",
                                "on"
                            ]
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [],
                            "properties": {
                                "supportedThermostatFanModes": {
                                    "type": "array",
                                    "items": {
                                        "title": "ThermostatFanMode",
                                        "type": "string",
                                        "enum": [
                                            "auto",
                                            "circulate",
                                            "followschedule",
                                            "on"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setThermostatFanMode",
                "enumCommands": [
                    {
                        "command": "fanAuto",
                        "value": "auto"
                    },
                    {
                        "command": "fanCirculate",
                        "value": "circulate"
                    },
                    {
                        "command": "fanOn",
                        "value": "on"
                    }
                ]
            },
            "thermostatMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ThermostatMode",
                            "type": "string",
                            "enum": [
                                "asleep",
                                "auto",
                                "autowitheco",
                                "autowithreset",
                                "autochangeover",
                                "autochangeoveractive",
                                "autocool",
                                "autoheat",
                                "auxheatonly",
                                "auxiliaryemergencyheat",
                                "away",
                                "cool",
                                "custom",
                                "dayoff",
                                "dryair",
                                "eco",
                                "emergency heat",
                                "emergencyheat",
                                "emergencyheatactive",
                                "energysavecool",
                                "energysaveheat",
                                "fanonly",
                                "frostguard",
                                "furnace",
                                "heat",
                                "heatingoff",
                                "home",
                                "in",
                                "manual",
                                "moistair",
                                "off",
                                "out",
                                "resume",
                                "rush hour",
                                "rushhour",
                                "schedule",
                                "southernaway"
                            ]
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [],
                            "properties": {
                                "supportedThermostatModes": {
                                    "type": "array",
                                    "items": {
                                        "title": "ThermostatMode",
                                        "type": "string",
                                        "enum": [
                                            "asleep",
                                            "auto",
                                            "autowitheco",
                                            "autowithreset",
                                            "autochangeover",
                                            "autochangeoveractive",
                                            "autocool",
                                            "autoheat",
                                            "auxheatonly",
                                            "auxiliaryemergencyheat",
                                            "away",
                                            "cool",
                                            "custom",
                                            "dayoff",
                                            "dryair",
                                            "eco",
                                            "emergency heat",
                                            "emergencyheat",
                                            "emergencyheatactive",
                                            "energysavecool",
                                            "energysaveheat",
                                            "fanonly",
                                            "frostguard",
                                            "furnace",
                                            "heat",
                                            "heatingoff",
                                            "home",
                                            "in",
                                            "manual",
                                            "moistair",
                                            "off",
                                            "out",
                                            "resume",
                                            "rush hour",
                                            "rushhour",
                                            "schedule",
                                            "southernaway"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setThermostatMode",
                "enumCommands": [
                    {
                        "command": "auto",
                        "value": "auto"
                    },
                    {
                        "command": "cool",
                        "value": "cool"
                    },
                    {
                        "command": "emergencyHeat",
                        "value": "emergency heat"
                    },
                    {
                        "command": "heat",
                        "value": "heat"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    }
                ]
            },
            "supportedThermostatModes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "ThermostatMode",
                                "type": "string",
                                "enum": [
                                    "asleep",
                                    "auto",
                                    "autowitheco",
                                    "autowithreset",
                                    "autochangeover",
                                    "autochangeoveractive",
                                    "autocool",
                                    "autoheat",
                                    "auxheatonly",
                                    "auxiliaryemergencyheat",
                                    "away",
                                    "cool",
                                    "custom",
                                    "dayoff",
                                    "dryair",
                                    "eco",
                                    "emergency heat",
                                    "emergencyheat",
                                    "emergencyheatactive",
                                    "energysavecool",
                                    "energysaveheat",
                                    "fanonly",
                                    "frostguard",
                                    "furnace",
                                    "heat",
                                    "heatingoff",
                                    "home",
                                    "in",
                                    "manual",
                                    "moistair",
                                    "off",
                                    "out",
                                    "resume",
                                    "rush hour",
                                    "rushhour",
                                    "schedule",
                                    "southernaway"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "heat": {
                "arguments": []
            },
            "setSchedule": {
                "arguments": [
                    {
                        "name": "schedule",
                        "optional": false,
                        "schema": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    }
                ]
            },
            "auto": {
                "arguments": []
            },
            "cool": {
                "arguments": []
            },
            "emergencyHeat": {
                "arguments": []
            },
            "setThermostatFanMode": {
                "arguments": [
                    {
                        "name": "fanmode",
                        "optional": false,
                        "schema": {
                            "title": "ThermostatFanMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "circulate",
                                "followschedule",
                                "on"
                            ]
                        }
                    }
                ]
            },
            "fanAuto": {
                "arguments": []
            },
            "fanCirculate": {
                "arguments": []
            },
            "off": {
                "arguments": []
            },
            "setCoolingSetpoint": {
                "arguments": [
                    {
                        "name": "setpoint",
                        "optional": false,
                        "schema": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        }
                    }
                ]
            },
            "setHeatingSetpoint": {
                "arguments": [
                    {
                        "name": "setpoint",
                        "optional": false,
                        "schema": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        }
                    }
                ]
            },
            "setThermostatMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "ThermostatMode",
                            "type": "string",
                            "enum": [
                                "asleep",
                                "auto",
                                "autowitheco",
                                "autowithreset",
                                "autochangeover",
                                "autochangeoveractive",
                                "autocool",
                                "autoheat",
                                "auxheatonly",
                                "auxiliaryemergencyheat",
                                "away",
                                "cool",
                                "custom",
                                "dayoff",
                                "dryair",
                                "eco",
                                "emergency heat",
                                "emergencyheat",
                                "emergencyheatactive",
                                "energysavecool",
                                "energysaveheat",
                                "fanonly",
                                "frostguard",
                                "furnace",
                                "heat",
                                "heatingoff",
                                "home",
                                "in",
                                "manual",
                                "moistair",
                                "off",
                                "out",
                                "resume",
                                "rush hour",
                                "rushhour",
                                "schedule",
                                "southernaway"
                            ]
                        }
                    }
                ]
            },
            "fanOn": {
                "arguments": []
            }
        }
    },
    {
        "id": "thermostatCoolingSetpoint",
        "version": 1,
        "status": "live",
        "name": "Thermostat Cooling Setpoint",
        "attributes": {
            "coolingSetpoint": {
                "schema": {
                    "title": "Temperature",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "setter": "setCoolingSetpoint",
                "enumCommands": []
            }
        },
        "commands": {
            "setCoolingSetpoint": {
                "arguments": [
                    {
                        "name": "setpoint",
                        "optional": false,
                        "schema": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "thermostatFanMode",
        "version": 1,
        "status": "live",
        "name": "Thermostat Fan Mode",
        "attributes": {
            "thermostatFanMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ThermostatFanMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "circulate",
                                "followschedule",
                                "on"
                            ]
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [],
                            "properties": {
                                "supportedThermostatFanModes": {
                                    "type": "array",
                                    "items": {
                                        "title": "ThermostatFanMode",
                                        "type": "string",
                                        "enum": [
                                            "auto",
                                            "circulate",
                                            "followschedule",
                                            "on"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setThermostatFanMode",
                "enumCommands": [
                    {
                        "command": "fanAuto",
                        "value": "auto"
                    },
                    {
                        "command": "fanCirculate",
                        "value": "circulate"
                    },
                    {
                        "command": "fanOn",
                        "value": "on"
                    }
                ]
            },
            "supportedThermostatFanModes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "ThermostatFanMode",
                                "type": "string",
                                "enum": [
                                    "auto",
                                    "circulate",
                                    "followschedule",
                                    "on"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "fanOn": {
                "arguments": []
            },
            "setThermostatFanMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "ThermostatFanMode",
                            "type": "string",
                            "enum": [
                                "auto",
                                "circulate",
                                "followschedule",
                                "on"
                            ]
                        }
                    }
                ]
            },
            "fanAuto": {
                "arguments": []
            },
            "fanCirculate": {
                "arguments": []
            }
        }
    },
    {
        "id": "thermostatHeatingSetpoint",
        "version": 1,
        "status": "live",
        "name": "Thermostat Heating Setpoint",
        "attributes": {
            "heatingSetpoint": {
                "schema": {
                    "title": "Temperature",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "setter": "setHeatingSetpoint",
                "enumCommands": []
            }
        },
        "commands": {
            "setHeatingSetpoint": {
                "arguments": [
                    {
                        "name": "setpoint",
                        "optional": false,
                        "schema": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "thermostatMode",
        "version": 1,
        "status": "live",
        "name": "Thermostat Mode",
        "attributes": {
            "thermostatMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ThermostatMode",
                            "type": "string",
                            "enum": [
                                "asleep",
                                "auto",
                                "autowitheco",
                                "autowithreset",
                                "autochangeover",
                                "autochangeoveractive",
                                "autocool",
                                "autoheat",
                                "auxheatonly",
                                "auxiliaryemergencyheat",
                                "away",
                                "cool",
                                "custom",
                                "dayoff",
                                "dryair",
                                "eco",
                                "emergency heat",
                                "emergencyheat",
                                "emergencyheatactive",
                                "energysavecool",
                                "energysaveheat",
                                "fanonly",
                                "frostguard",
                                "furnace",
                                "heat",
                                "heatingoff",
                                "home",
                                "in",
                                "manual",
                                "moistair",
                                "off",
                                "out",
                                "resume",
                                "rush hour",
                                "rushhour",
                                "schedule",
                                "southernaway"
                            ]
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [],
                            "properties": {
                                "supportedThermostatModes": {
                                    "type": "array",
                                    "items": {
                                        "title": "ThermostatMode",
                                        "type": "string",
                                        "enum": [
                                            "asleep",
                                            "auto",
                                            "autowitheco",
                                            "autowithreset",
                                            "autochangeover",
                                            "autochangeoveractive",
                                            "autocool",
                                            "autoheat",
                                            "auxheatonly",
                                            "auxiliaryemergencyheat",
                                            "away",
                                            "cool",
                                            "custom",
                                            "dayoff",
                                            "dryair",
                                            "eco",
                                            "emergency heat",
                                            "emergencyheat",
                                            "emergencyheatactive",
                                            "energysavecool",
                                            "energysaveheat",
                                            "fanonly",
                                            "frostguard",
                                            "furnace",
                                            "heat",
                                            "heatingoff",
                                            "home",
                                            "in",
                                            "manual",
                                            "moistair",
                                            "off",
                                            "out",
                                            "resume",
                                            "rush hour",
                                            "rushhour",
                                            "schedule",
                                            "southernaway"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setThermostatMode",
                "enumCommands": [
                    {
                        "command": "auto",
                        "value": "auto"
                    },
                    {
                        "command": "cool",
                        "value": "cool"
                    },
                    {
                        "command": "emergencyHeat",
                        "value": "emergency heat"
                    },
                    {
                        "command": "heat",
                        "value": "heat"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    }
                ]
            },
            "supportedThermostatModes": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "ThermostatMode",
                                "type": "string",
                                "enum": [
                                    "asleep",
                                    "auto",
                                    "autowitheco",
                                    "autowithreset",
                                    "autochangeover",
                                    "autochangeoveractive",
                                    "autocool",
                                    "autoheat",
                                    "auxheatonly",
                                    "auxiliaryemergencyheat",
                                    "away",
                                    "cool",
                                    "custom",
                                    "dayoff",
                                    "dryair",
                                    "eco",
                                    "emergency heat",
                                    "emergencyheat",
                                    "emergencyheatactive",
                                    "energysavecool",
                                    "energysaveheat",
                                    "fanonly",
                                    "frostguard",
                                    "furnace",
                                    "heat",
                                    "heatingoff",
                                    "home",
                                    "in",
                                    "manual",
                                    "moistair",
                                    "off",
                                    "out",
                                    "resume",
                                    "rush hour",
                                    "rushhour",
                                    "schedule",
                                    "southernaway"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "heat": {
                "arguments": []
            },
            "auto": {
                "arguments": []
            },
            "setThermostatMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "ThermostatMode",
                            "type": "string",
                            "enum": [
                                "asleep",
                                "auto",
                                "autowitheco",
                                "autowithreset",
                                "autochangeover",
                                "autochangeoveractive",
                                "autocool",
                                "autoheat",
                                "auxheatonly",
                                "auxiliaryemergencyheat",
                                "away",
                                "cool",
                                "custom",
                                "dayoff",
                                "dryair",
                                "eco",
                                "emergency heat",
                                "emergencyheat",
                                "emergencyheatactive",
                                "energysavecool",
                                "energysaveheat",
                                "fanonly",
                                "frostguard",
                                "furnace",
                                "heat",
                                "heatingoff",
                                "home",
                                "in",
                                "manual",
                                "moistair",
                                "off",
                                "out",
                                "resume",
                                "rush hour",
                                "rushhour",
                                "schedule",
                                "southernaway"
                            ]
                        }
                    }
                ]
            },
            "cool": {
                "arguments": []
            },
            "emergencyHeat": {
                "arguments": []
            },
            "off": {
                "arguments": []
            }
        }
    },
    {
        "id": "thermostatOperatingState",
        "version": 1,
        "status": "live",
        "name": "Thermostat Operating State",
        "attributes": {
            "thermostatOperatingState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "ThermostatOperatingState",
                            "type": "string",
                            "enum": [
                                "cooling",
                                "fan only",
                                "heating",
                                "idle",
                                "pending cool",
                                "pending heat",
                                "vent economizer"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "thermostatSchedule",
        "version": 1,
        "status": "deprecated",
        "name": "Thermostat Schedule",
        "attributes": {
            "schedule": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setSchedule",
                "enumCommands": []
            }
        },
        "commands": {
            "setSchedule": {
                "arguments": [
                    {
                        "name": "schedule",
                        "optional": false,
                        "schema": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "thermostatSetpoint",
        "version": 1,
        "status": "deprecated",
        "name": "Thermostat Setpoint",
        "attributes": {
            "thermostatSetpoint": {
                "schema": {
                    "title": "Temperature",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "TemperatureValue",
                            "type": "number",
                            "minimum": -460,
                            "maximum": 10000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "F",
                                "C"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "threeAxis",
        "version": 1,
        "status": "live",
        "name": "Three Axis",
        "attributes": {
            "threeAxis": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "minimum": -10000,
                                "maximum": 10000
                            },
                            "minItems": 3,
                            "maxItems": 3
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "mG"
                            ],
                            "default": "mG"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "timedSession",
        "version": 1,
        "status": "proposed",
        "name": "Timed Session",
        "attributes": {
            "completionTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setCompletionTime",
                "enumCommands": []
            },
            "sessionStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "canceled",
                                "paused",
                                "running",
                                "stopped"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "cancel",
                        "value": "canceled"
                    },
                    {
                        "command": "pause",
                        "value": "paused"
                    },
                    {
                        "command": "start",
                        "value": "running"
                    },
                    {
                        "command": "stop",
                        "value": "stopped"
                    }
                ]
            }
        },
        "commands": {
            "cancel": {
                "arguments": []
            },
            "stop": {
                "arguments": []
            },
            "start": {
                "arguments": []
            },
            "setCompletionTime": {
                "arguments": [
                    {
                        "name": "completionTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    }
                ]
            },
            "pause": {
                "arguments": []
            }
        }
    },
    {
        "id": "tone",
        "version": 1,
        "status": "live",
        "name": "Tone",
        "attributes": {},
        "commands": {
            "beep": {
                "arguments": []
            }
        }
    },
    {
        "id": "touchSensor",
        "version": 1,
        "status": "deprecated",
        "name": "Touch Sensor",
        "attributes": {
            "touch": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "touched"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "tvChannel",
        "version": 1,
        "status": "proposed",
        "name": "Tv Channel",
        "attributes": {
            "tvChannel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setTvChannel",
                "enumCommands": []
            },
            "tvChannelName": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "setter": "setTvChannelName",
                "enumCommands": []
            }
        },
        "commands": {
            "channelDown": {
                "arguments": []
            },
            "setTvChannel": {
                "arguments": [
                    {
                        "name": "tvChannel",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            },
            "channelUp": {
                "arguments": []
            },
            "setTvChannelName": {
                "arguments": [
                    {
                        "name": "tvChannelName",
                        "optional": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "tvocHealthConcern",
        "version": 1,
        "status": "proposed",
        "name": "Tvoc Health Concern",
        "attributes": {
            "tvocHealthConcern": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AirQualityHealthConcern",
                            "type": "string",
                            "enum": [
                                "good",
                                "moderate",
                                "slightlyUnhealthy",
                                "unhealthy",
                                "veryUnhealthy",
                                "hazardous"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "tvocMeasurement",
        "version": 1,
        "status": "live",
        "name": "Tvoc Measurement",
        "attributes": {
            "tvocLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1000000
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "ppm"
                            ],
                            "default": "ppm"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "ultravioletIndex",
        "version": 1,
        "status": "live",
        "name": "Ultraviolet Index",
        "attributes": {
            "ultravioletIndex": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "valve",
        "version": 1,
        "status": "live",
        "name": "Valve",
        "attributes": {
            "valve": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "closed",
                                "open"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "close",
                        "value": "closed"
                    },
                    {
                        "command": "open",
                        "value": "open"
                    }
                ]
            }
        },
        "commands": {
            "close": {
                "arguments": []
            },
            "open": {
                "arguments": []
            }
        }
    },
    {
        "id": "vehicleEngine",
        "version": 1,
        "status": "proposed",
        "name": "Vehicle Engine",
        "attributes": {
            "engineState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "starting",
                                "running",
                                "unknown",
                                "off"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "startEngine",
                        "value": "running"
                    },
                    {
                        "command": "stopEngine",
                        "value": "off"
                    }
                ]
            }
        },
        "commands": {
            "startEngine": {
                "arguments": []
            },
            "stopEngine": {
                "arguments": []
            }
        }
    },
    {
        "id": "vehicleFuelLevel",
        "version": 1,
        "status": "proposed",
        "name": "Vehicle Fuel Level",
        "attributes": {
            "fuelLevel": {
                "schema": {
                    "title": "IntegerPercent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "vehicleOdometer",
        "version": 1,
        "status": "proposed",
        "name": "Vehicle Odometer",
        "attributes": {
            "odometerReading": {
                "schema": {
                    "title": "Distance",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveNumber",
                            "type": "number",
                            "minimum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "mi",
                                "km",
                                "m"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "vehicleRange",
        "version": 1,
        "status": "proposed",
        "name": "Vehicle Range",
        "attributes": {
            "estimatedRemainingRange": {
                "schema": {
                    "title": "Distance",
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveNumber",
                            "type": "number",
                            "minimum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "mi",
                                "km",
                                "m"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value",
                        "unit"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "vehicleTirePressureMonitor",
        "version": 1,
        "status": "proposed",
        "name": "Vehicle Tire Pressure Monitor",
        "attributes": {
            "tirePressureState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "normal",
                                "warn"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "veryFineDustHealthConcern",
        "version": 1,
        "status": "proposed",
        "name": "Very Fine Dust Health Concern",
        "attributes": {
            "veryFineDustHealthConcern": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "AirQualityHealthConcern",
                            "type": "string",
                            "enum": [
                                "good",
                                "moderate",
                                "slightlyUnhealthy",
                                "unhealthy",
                                "veryUnhealthy",
                                "hazardous"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "veryFineDustSensor",
        "version": 1,
        "status": "live",
        "name": "Very Fine Dust Sensor",
        "attributes": {
            "veryFineDustLevel": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "μg/m^3"
                            ],
                            "default": "μg/m^3"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "videoCamera",
        "version": 1,
        "status": "live",
        "name": "Video Camera",
        "attributes": {
            "settings": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "mute": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MuteState",
                            "type": "string",
                            "enum": [
                                "muted",
                                "unmuted"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": [
                    {
                        "command": "mute",
                        "value": "muted"
                    },
                    {
                        "command": "unmute",
                        "value": "unmuted"
                    }
                ]
            },
            "camera": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on",
                                "restarting",
                                "unavailable"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": [
                    {
                        "command": "on",
                        "value": "on"
                    },
                    {
                        "command": "off",
                        "value": "off"
                    }
                ]
            },
            "statusMessage": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "mute": {
                "arguments": []
            },
            "unmute": {
                "arguments": []
            },
            "flip": {
                "arguments": []
            },
            "off": {
                "arguments": []
            },
            "on": {
                "arguments": []
            }
        }
    },
    {
        "id": "videoCapture",
        "version": 1,
        "status": "live",
        "name": "Video Capture",
        "attributes": {
            "stream": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "clip": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "capture": {
                "arguments": [
                    {
                        "name": "startTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    {
                        "name": "captureTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    {
                        "name": "endTime",
                        "optional": false,
                        "schema": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    {
                        "name": "correlationId",
                        "optional": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "reason",
                        "optional": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "videoClips",
        "version": 1,
        "status": "proposed",
        "name": "Video Clips",
        "attributes": {
            "videoClip": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "VideoClip",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "status": {
                                    "title": "VideoClipStatus",
                                    "type": "string",
                                    "enum": [
                                        "initiated",
                                        "streaming",
                                        "completed",
                                        "failed",
                                        "ignored"
                                    ]
                                },
                                "clipId": {
                                    "title": "String",
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "thumbnailUrl": {
                                    "title": "URL",
                                    "type": "string",
                                    "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?$"
                                },
                                "clipUrl": {
                                    "title": "URL",
                                    "type": "string",
                                    "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?$"
                                },
                                "startTime": {
                                    "title": "Iso8601Date",
                                    "type": "string",
                                    "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                                },
                                "captureTime": {
                                    "title": "Iso8601Date",
                                    "type": "string",
                                    "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                                },
                                "duration": {
                                    "title": "PositiveInteger",
                                    "type": "integer",
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "captureClip": {
                "arguments": [
                    {
                        "name": "duration",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "preFetch",
                        "optional": false,
                        "schema": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "videoStream",
        "version": 1,
        "status": "live",
        "name": "Video Stream",
        "attributes": {
            "stream": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "JsonObject",
                            "type": "object"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "stopStream": {
                "arguments": []
            },
            "startStream": {
                "arguments": []
            }
        }
    },
    {
        "id": "voltageMeasurement",
        "version": 1,
        "status": "live",
        "name": "Voltage Measurement",
        "attributes": {
            "voltage": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Number",
                            "type": "number"
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "V"
                            ],
                            "default": "V"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "washerMode",
        "version": 1,
        "status": "proposed",
        "name": "Washer Mode",
        "attributes": {
            "washerMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "WasherMode",
                            "type": "string",
                            "enum": [
                                "regular",
                                "heavy",
                                "rinse",
                                "spinDry"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setWasherMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setWasherMode": {
                "arguments": [
                    {
                        "name": "mode",
                        "optional": false,
                        "schema": {
                            "title": "WasherMode",
                            "type": "string",
                            "enum": [
                                "regular",
                                "heavy",
                                "rinse",
                                "spinDry"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "washerOperatingState",
        "version": 1,
        "status": "proposed",
        "name": "Washer Operating State",
        "attributes": {
            "completionTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "machineState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setMachineState",
                "enumCommands": []
            },
            "washerJobState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "airWash",
                                "cooling",
                                "delayWash",
                                "drying",
                                "finish",
                                "none",
                                "preWash",
                                "rinse",
                                "spin",
                                "wash",
                                "weightSensing",
                                "wrinklePrevent"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "supportedMachineStates": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MachineState",
                                "type": "string",
                                "enum": [
                                    "pause",
                                    "run",
                                    "stop"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setMachineState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "washerOperationalState",
        "version": 1,
        "status": "deprecated",
        "name": "Washer Operational State",
        "attributes": {
            "completionTime": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "Iso8601Date",
                            "type": "string",
                            "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "machineState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setMachineState",
                "enumCommands": []
            },
            "washerJobState": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "airWash",
                                "cooling",
                                "delayWash",
                                "drying",
                                "finish",
                                "none",
                                "preWash",
                                "rinse",
                                "spin",
                                "wash",
                                "weightSensing",
                                "wrinklePrevent"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "supportedMachineStates": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "title": "MachineState",
                                "type": "string",
                                "enum": [
                                    "pause",
                                    "run",
                                    "stop"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "setMachineState": {
                "arguments": [
                    {
                        "name": "state",
                        "optional": false,
                        "schema": {
                            "title": "MachineState",
                            "type": "string",
                            "enum": [
                                "pause",
                                "run",
                                "stop"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "waterSensor",
        "version": 1,
        "status": "live",
        "name": "Water Sensor",
        "attributes": {
            "water": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "MoistureState",
                            "type": "string",
                            "enum": [
                                "dry",
                                "wet"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "webrtc",
        "version": 1,
        "status": "live",
        "name": "webrtc",
        "attributes": {
            "sdpAnswer": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "sdp": {
                                    "type": "string"
                                },
                                "turn_url": {
                                    "type": "string"
                                },
                                "turn_user": {
                                    "type": "string"
                                },
                                "turn_pwd": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "sdp"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "talkback": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "boolean"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "supportedFeatures": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "audioOnly": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "boolean"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "stunUrl": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "URL",
                            "type": "string",
                            "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$\u0026\u0027()*+,;\u003d:\\/?@]|%[0-9A-F]{2})*))?$"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {
            "sdpOffer": {
                "arguments": [
                    {
                        "name": "id",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sdp",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "end": {
                "arguments": [
                    {
                        "name": "id",
                        "optional": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "wifiMeshRouter",
        "version": 1,
        "status": "proposed",
        "name": "Wifi Mesh Router",
        "attributes": {
            "disconnectedRouterCount": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "wifiGuestNetworkStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "WifiState",
                            "type": "string",
                            "enum": [
                                "enabled",
                                "disabled",
                                "not configured"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "enableWifiGuestNetwork",
                        "value": "enabled"
                    },
                    {
                        "command": "disableWifiGuestNetwork",
                        "value": "disabled"
                    }
                ]
            },
            "connectedRouterCount": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "connectedDeviceCount": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveInteger",
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "wifiNetworkName": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "wifiGuestNetworkName": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            },
            "wifiNetworkStatus": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "WifiState",
                            "type": "string",
                            "enum": [
                                "enabled",
                                "disabled",
                                "not configured"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "enableWifiNetwork",
                        "value": "enabled"
                    },
                    {
                        "command": "disableWifiNetwork",
                        "value": "disabled"
                    }
                ]
            }
        },
        "commands": {
            "enableWifiGuestNetwork": {
                "arguments": []
            },
            "disableWifiNetwork": {
                "arguments": []
            },
            "enableWifiNetwork": {
                "arguments": []
            },
            "disableWifiGuestNetwork": {
                "arguments": []
            }
        }
    },
    {
        "id": "windSpeed",
        "version": 1,
        "status": "proposed",
        "name": "Wind Speed",
        "attributes": {
            "windspeed": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "PositiveNumber",
                            "type": "number",
                            "minimum": 0
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "m/s"
                            ],
                            "default": "m/s"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": []
            }
        },
        "commands": {}
    },
    {
        "id": "windowShade",
        "version": 1,
        "status": "live",
        "name": "Window Shade",
        "attributes": {
            "supportedWindowShadeCommands": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "open",
                                    "close",
                                    "pause"
                                ]
                            }
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "windowShade": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "OpenableState",
                            "type": "string",
                            "enum": [
                                "closed",
                                "closing",
                                "open",
                                "opening",
                                "partially open",
                                "unknown"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "enumCommands": [
                    {
                        "command": "close",
                        "value": "closed"
                    },
                    {
                        "command": "open",
                        "value": "open"
                    }
                ]
            }
        },
        "commands": {
            "close": {
                "arguments": []
            },
            "open": {
                "arguments": []
            },
            "pause": {
                "arguments": []
            }
        }
    },
    {
        "id": "windowShadeLevel",
        "version": 1,
        "status": "proposed",
        "name": "Window Shade Level",
        "attributes": {
            "shadeLevel": {
                "schema": {
                    "title": "IntegerPercent",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "unit": {
                            "type": "string",
                            "enum": [
                                "%"
                            ],
                            "default": "%"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setShadeLevel",
                "enumCommands": []
            }
        },
        "commands": {
            "setShadeLevel": {
                "arguments": [
                    {
                        "name": "shadeLevel",
                        "optional": false,
                        "schema": {
                            "title": "IntegerPercent",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "value": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 100
                                },
                                "unit": {
                                    "type": "string",
                                    "enum": [
                                        "%"
                                    ],
                                    "default": "%"
                                }
                            },
                            "required": [
                                "value"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "windowShadePreset",
        "version": 1,
        "status": "live",
        "name": "Window Shade Preset",
        "attributes": {},
        "commands": {
            "presetPosition": {
                "arguments": []
            }
        }
    },
    {
        "id": "wirelessOperatingMode",
        "version": 1,
        "status": "proposed",
        "name": "Wireless Operating Mode",
        "attributes": {
            "wirelessOperatingMode": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "enum": [
                                "whenNeeded",
                                "alwaysOn"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "value"
                    ]
                },
                "setter": "setWirelessOperatingMode",
                "enumCommands": []
            }
        },
        "commands": {
            "setWirelessOperatingMode": {
                "arguments": [
                    {
                        "name": "wirelessOperatingMode",
                        "optional": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "whenNeeded",
                                "alwaysOn"
                            ]
                        }
                    }
                ]
            }
        }
    },
    {
        "id": "zwMultichannel",
        "version": 1,
        "status": "live",
        "name": "Zw Multichannel",
        "attributes": {
            "epEvent": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            },
            "epInfo": {
                "schema": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    "additionalProperties": false,
                    "required": []
                },
                "enumCommands": []
            }
        },
        "commands": {
            "enableEpEvents": {
                "arguments": [
                    {
                        "name": "enabledEndpoints",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            },
            "epCmd": {
                "arguments": [
                    {
                        "name": "endpoint",
                        "optional": false,
                        "schema": {
                            "title": "Number",
                            "type": "number"
                        }
                    },
                    {
                        "name": "commands",
                        "optional": false,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ]
            }
        }
    }
]